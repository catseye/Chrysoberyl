# encoding: UTF-8
Commodore 64:
  type: Platform
  links:
  - 'http://vice-emu.sourceforge.net/'
  as-a-prerequisite: |
    This project assumes that it will be running on a stock
    Commodore 64, great microcomputer of old (well, if you consider
    things from the early 80's to be old...)
    
    Of course, not everyone owns a Commodore 64, but these days,
    quite good open-source C64 emulators are available for most
    platforms.  We suggest VICE.

MS-DOS:
  type: Platform
  links:
  - 'http://www.freedos.org/'
  - 'http://www.dosbox.com/'
  - 'http://bochs.sourceforge.net/'
  as-a-prerequisite: |
    This project assumes that it will be running under MS-DOS or something
    which emulates MS-DOS sufficiently well. This includes both the standard
    DOS INT 21h handler, and the standard DOS utilies like, for example,
    DEBUG.COM.
    
    You can try (at your own risk, of course) using the project under some
    more-or-less modern version of Windows and hope that it emulates DOS
    well enough to work. It might, it might not. If not, you have options:
    
    *   DOSBox is an emulator, available for many systems, which
        simulates both an x86-based IBM PC, and MS-DOS on top of it.  It
        should be plenty sufficient for running DOS-based software found
        here.
    *   For a more heavyweight solution, you could install FreeDOS
        on a PC emulator such as Bochs.
    
    All of the above software packages are open source.
  commentary: |
    I think the only thing that requires MS-DOS is shelta; and even then, it might
    rely only on the BIOS interface, I forget.

Cygwin:
  type: Platform
  description: |
    [Cygwin](http://www.cygwin.com/) is a compatibility layer for Windows
    which lets you build and run software which expects a Unix-like
    operating system.
  commentary: |    
    Cygwin is really nice when you're stuck using Windows, but you want to
    play with [open-source software](opensource.html), most of which expects
    to be run on a Unix-like operating system.
    
    But there is one annoying thing about Cygwin: in its default install,
    you have to use it through a console window, of the kind provided by
    Windows for running Command Prompt. The editing capabilities and general
    usability of this console window are just short of atrocious.
    
    Fortunately, on modern Windowses, you're not stuck with this: you can
    make Cygwin use a PowerShell window. While not paradise, it's not quite
    as frustrating to use. Here's how to set it up:
    
    1.  Find PowerShell on your Windows installation. The easiest way to do
        this is probably to use the search facility in the Start menu, and
        type in `powershell`.
    2.  Once you find an icon for PowerShell, create a shortcut for it.
        Alt-drag it to the desktop or something.
    3.  Edit the properties of that shortcut. The target will be something
        like `%SystemRoot%\system32\WindowsPowerShell\v1.0\powershell.exe`.
        Add the location of your `cygwin.bat` file to it, so that it's
        something like:
        `%SystemRoot%\system32\WindowsPowerShell\v1.0\powershell.exe C:\cygwin\cygwin.bat`.
    4.  Probably you should rename your shortcut "Cygwin Powershell" or
        something, to minimize confusion.
    5.  Double-click your new shortcut. It should totally just work.
