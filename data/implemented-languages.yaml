# encoding: UTF-8
brainfuck:
  type: Programming Language
  genre: Esolang
  author: Urban Müller
  esowiki: brainfuck
  computational-class: proved Turing-complete
  implementations:
  - pibfi

pibfi:
  type: Language Implementation
  in-distribution: pibfi distribution
  acronym-for: Platonic Ideal Brainfuck Interpeter
  reference: no
  license: BSD
  source-language: brainfuck
  host-language: Erlang
  implementation-type: interpreter
  abstract: |-
    In contrast to all the ultra-minimal Brainfuck interpreters and
    compilers out there, I figured I should write a monster: the Platonic Ideal BrainFuck Interpreter.
    Written in Erlang, it contains just about every feature under the sun, including the kitchen sink.
    I sort of lost interest when I was adding profiling and discovered there were several different
    extant reckonings of a "number of instructions executed" metric for Brainfuck.  I guess it was that
    point that made me recognize just how silly this project was...
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

Muriel:
  type: Programming Language
  genre: Esolang
  author: Matthew Westcott
  esowiki: Muriel
  reference-distribution: Muriel distribution
  computational-class: proved Turing-complete
  implementations:
  - muriel.pl

muriel.pl:
  type: Language Implementation
  in-distribution: Muriel distribution
  reference: no
  license: BSD
  source-language: Muriel
  host-language: Perl
  implementation-type: interpreter
  abstract: |-
    This is an interpeter, written in Perl, for Matthew Westcott's
    quine-based language Muriel.  It was probably
    the first full implementation of that language.
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  github: https://github.com/catseye/Muriel.git
  bitbucket: https://bitbucket.org/catseye/muriel/


VALGOL:
  type: Programming Language
  genre: Joke language
  source-document: Lesser Known Languages List
  esowiki: VALGOL
  computational-class: unknown computational class
  implementations:
  - valgol.erl

valgol.erl:
  type: Language Implementation
  reference: no
  license: BSD
  source-language: VALGOL
  host-language: Erlang
  implementation-type: parser
  abstract: |-
    A parser, in Erlang, for the Lesser-Known Language VALGOL.
    It, like, totally demonstrates how a parser can be written so
    that a separate scanner is totally not needed.  Bitchen!
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  # locate this in the dipple

Smallfuck:
  type: Programming Language
  genre: Esolang
  author: Nikita Ayzikovsky
  esowiki: Smallfuck
  computational-class: Finite-automata-complete
  inception-date: ca 2002
  implementations:
  - sf2tab

sf2tab:
  type: Language Implementation
  reference: no
  license: BSD
  source-language: Smallfuck
  host-language: ANSI C
  target-language: lookup table
  implementation-type: compiler
  abstract: |-
    Based on the observation that Smallfuck, lacking the (assumed-)infinite tape of Brainfuck,
    can only express finite-state automata, I wrote a little program in C to compile Smallfuck programs to
    (generally gigantic) lookup-tables.
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  # locate this in the dipple

Underload:
  type: Programming Language
  genre: Esolang
  author: Alex Smith (ais523)
  computational-class: believed Turing-complete
  esowiki: Underload
  implementations:
  - stringie

stringie:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: Underload
  host-language: ANSI C
  implementation-type: interpreter
  abstract: |-
    Seeing that there was no *non*-pathological implementation of Alex Smith's
    beautiful [[Underload]] language in C, I undertook that project one evening.
    (In the company of a bottle of really fine wine.  Why, it cost almost twelve dollars.)
    The result is one of the most pedantic and boring Underload interpreters known to
    man.  Perhaps the most interesting property of it is its name, `stringie`, which was
    an accident.
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  # locate this in the esolangs archive

'PL-{GOTO}':
  type: Programming Language
  genre: Pedagogical language
  authors:
  - Brainerd
  - Landweber
  computational-class: Primitive recursive
  implementations:
  - 'PL-{GOTO}.NET'

'PL-{GOTO}.NET':
  type: Language Implementation
  in-distribution: PL-{GOTO}.NET distribution
  reference: no
  license: Public Domain
  source-language: PL-{GOTO}
  host-language: Haskell
  target-language: MSIL
  # ah, but it can also interpret.  meep!
  implementation-type: compiler
  abstract: |-
    PL-{GOTO}.NET is a compiler for the language PL-{GOTO}
    from Brainerd and Landweber's *Theory of Computation*
    (1974; ISBN 0471095850). PL-{GOTO} can express exactly the
    primitive recursive functions, and thus PL-{GOTO} programs
    always terminate. PL-{GOTO}.NET generates MSIL code which
    can then (using `ilasm`) be turned into a .NET
    executable.  It can also execute PL-{GOTO} programs
    directly.
  commentary: |-
    I've been idly fascinated by the primitive recursive example programming language
    PL-{GOTO} from Brainerd and Landweber's *Theory of Computation* for some time.
    And for some reason I will never be able to explain, I had the craving to implement a compiler
    which could produce .NET executables by generating MSIL assembly language.  And putting
    those two together — well, that struck me as a respectably absurd match, so that's what I did.
    The compiler is written in Haskell and uses Parsec for parsing PL-{GOTO} programs; I tried
    to keep the grammar true to what is presented in the book, not refactoring it to be LL(1), and
    keeping the `←` symbol for assignment.
  bitbucket: https://bitbucket.org/catseye/pl-goto-.net/
  github: https://github.com/catseye/PL-GOTO.NET.git
  issue-tracker: https://github.com/catseye/PL-GOTO.NET/issues
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

Ale:
  type: Programming Language
  genre: Esolang
  author: David Chipping
  esowiki: Ale
  computational-class: believed Turing-complete
  implementations:
  - tc.catseye.yoob.ale

tc.catseye.yoob.ale:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: Ale
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

Backflip:
  type: Programming Language
  genre: Esolang
  author: Alex Smith (ais523)
  esowiki: Backflip
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.backflip

tc.catseye.yoob.backflip:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: Backflip
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

Black:
  type: Programming Language
  genre: Esolang
  author: Alex Smith (ais523)
  esowiki: Black
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.black

tc.catseye.yoob.black:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: Black
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

LNUSP:
  type: Programming Language
  genre: Esolang
  esowiki: LNUSP
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.lnusp

tc.catseye.yoob.lnusp:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: LNUSP
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

1L_a:
  type: Programming Language
  genre: Esolang
  esowiki: 1L_a
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.onela

tc.catseye.yoob.onela:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: 1L_a
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

1L_AOI:
  type: Programming Language
  genre: Esolang
  esowiki: 1L_AOI
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.onelaoi

tc.catseye.yoob.onelaoi:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: 1L_AOI
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

PATH:
  type: Programming Language
  genre: Esolang
  esowiki: PATH
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.path

tc.catseye.yoob.path:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: PATH
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

Qdeql:
  type: Programming Language
  genre: Esolang
  esowiki: Qdeql
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.qdeql

tc.catseye.yoob.qdeql:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: Qdeql
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

Sceql:
  type: Programming Language
  genre: Esolang
  esowiki: Sceql
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.sceql

tc.catseye.yoob.sceql:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: Sceql
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

SNUSP:
  type: Programming Language
  genre: Esolang
  esowiki: SNUSP
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.snusp

tc.catseye.yoob.snusp:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: SNUSP
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

2-ill:
  type: Programming Language
  genre: Esolang
  esowiki: 2-ill
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.twoill

tc.catseye.yoob.twoill:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: 2-ill
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies

2L:
  type: Programming Language
  genre: Esolang
  esowiki: 2L
  computational-class: unknown computational class
  implementations:
  - tc.catseye.yoob.twol

tc.catseye.yoob.twol:
  type: Language Implementation
  reference: no
  license: Public Domain
  source-language: 2L
  host-language: Java
  host-framework: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
