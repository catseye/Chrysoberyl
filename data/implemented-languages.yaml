# encoding: UTF-8
# actually some of these do have reference distributions
brainfuck:
  type: Programming Language
  paradigms:
  - Imperative
  genre: Esolang
  authors:
  - Urban Müller
  esowiki: brainfuck
  computational-class: shown Turing-complete
  specification-link: esowiki
  commentary: |
    Brainfuck is the 12-bar blues of [[Esolang]].

pibfi:
  type: Implementation
  implementation-of: brainfuck
  in-distribution: pibfi distribution
  acronym-for: Platonic Ideal Brainfuck Interpeter
  reference: no
  license: BSD license
  host-language: Erlang
  implementation-type: interpreter
  description: |
    In contrast to all the ultra-minimal Brainfuck interpreters and
    compilers out there, I figured I should write a monster: the Platonic Ideal BrainFuck Interpreter.
    Written in Erlang, it contains just about every feature under the sun, including the kitchen sink.
    I sort of lost interest when I was adding profiling and discovered there were several different
    extant reckonings of a "number of instructions executed" metric for Brainfuck.  I guess it was that
    point that made me recognize just how silly this project was...
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


Muriel:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Quine-based
  authors:
  - Matthew Westcott
  esowiki: Muriel
  reference-distribution: Muriel distribution
  computational-class: shown Turing-complete
  specification-link: esowiki


muriel.pl:
  type: Implementation
  implementation-of: Muriel
  in-distribution: Muriel distribution
  reference: no
  license: BSD license
  host-language: Perl
  implementation-type: interpreter
  description: |
    This is an interpeter, written in Perl, for Matthew Westcott's
    quine-based language Muriel.  It was probably
    the first full implementation of that language.
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


VALGOL:
  type: Programming Language
  genre: Joke language
  paradigms:
  - Imperative
  authors:
  - Anonymous
  source-document: Lesser Known Languages List
  esowiki: VALGOL
  computational-class: unknown computational class
  no-specification: true

valgol.erl:
  type: Implementation
  implementation-of: VALGOL
  reference: no
  license: BSD license
  host-language: Erlang
  implementation-type: parser
  description: |
    A parser, in Erlang, for the Lesser-Known Language VALGOL.
    It, like, totally demonstrates how a parser can be written so
    that a separate scanner is totally not needed.  Bitchen!
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  # locate this in the dipple


Smallfuck:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Imperative
  authors:
  - Nikita Ayzikovsky
  esowiki: Smallfuck
  computational-class: Finite-automata-complete
  inception-date: ca 2002
  specification-link: esowiki


sf2tab:
  type: Implementation
  implementation-of: Smallfuck
  reference: no
  license: BSD license
  host-language: ANSI C
  target-language: lookup table
  implementation-type: compiler
  description: |
    Based on the observation that Smallfuck, lacking the (assumed-)infinite tape of Brainfuck,
    can only express finite-state automata, I wrote a little program in C to compile Smallfuck programs to
    (generally gigantic) lookup-tables.
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  # locate this in the dipple


Underload:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Stack-based
  authors:
  - Alex Smith (ais523)
  computational-class: believed Turing-complete
  esowiki: Underload
  specification-link: esowiki

stringie:
  type: Implementation
  implementation-of: Underload
  reference: no
  license: Public Domain
  host-language: ANSI C
  implementation-type: interpreter
  commentary: |
    Seeing that there was no *non*-pathological implementation of Alex Smith's
    beautiful [[Underload]] language in C, I undertook that project one evening.
    (In the company of a bottle of really fine wine.  Why, it cost almost twelve dollars.)
    The result is one of the most pedantic and boring Underload interpreters known to
    man.  Perhaps the most interesting property of it is its name, `stringie`, which was
    an accident.
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  # locate this in the esolangs archive


'PL-{GOTO}':
  type: Programming Language
  genre: Pedagogical language
  paradigms:
  - Imperative
  authors:
  - Walter Brainerd
  - Lawrence Landweber
  computational-class: Primitive recursive
  specification-link: http://www.amazon.com/Theory-Computation-Walter-S-Brainerd/dp/0471095850

'PL-{GOTO}.NET':
  type: Implementation
  implementation-of: PL-{GOTO}
  in-distribution: PL-{GOTO}.NET distribution
  reference: no
  license: Public Domain
  host-language: Haskell
  target-language: MSIL
  # ah, but it can also interpret.  meep!
  implementation-type: compiler
  description: |
    PL-{GOTO}.NET is a compiler for the language PL-{GOTO}
    from Brainerd and Landweber's *Theory of Computation*
    (1974; ISBN 0471095850). PL-{GOTO} can express exactly the
    primitive recursive functions, and thus PL-{GOTO} programs
    always terminate. PL-{GOTO}.NET generates MSIL code which
    can then (using `ilasm`) be turned into a .NET
    executable.  It can also execute PL-{GOTO} programs
    directly.
  commentary: |-
    I've been idly fascinated by the primitive recursive example programming language
    PL-{GOTO} from Brainerd and Landweber's *Theory of Computation* for some time.
    And for some reason I will never be able to explain, I had the craving to implement a compiler
    which could produce .NET executables by generating MSIL assembly language.  And putting
    those two together — well, that struck me as a respectably absurd match, so that's what I did.
    The compiler is written in Haskell and uses Parsec for parsing PL-{GOTO} programs; I tried
    to keep the grammar true to what is presented in the book, not refactoring it to be LL(1), and
    keeping the `←` symbol for assignment.
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  build-requirements:
  - Parsec


Ale:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Imperative
  authors:
  - David Chipping
  esowiki: Ale
  computational-class: believed Turing-complete
  specification-link: esowiki

tc.catseye.yoob.ale:
  type: Implementation
  implementation-of: Ale
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


Backflip:
  type: Programming Language
  paradigms:
  - 2-dimensional
  genre: Esolang
  authors:
  - Alex Smith (ais523)
  esowiki: Backflip
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.backflip:
  type: Implementation
  implementation-of: Backflip
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


Black:
  type: Programming Language
  genre: Esolang
  paradigms:
  - 2-dimensional
  authors:
  - Alex Smith (ais523)
  esowiki: Black
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.black:
  type: Implementation
  implementation-of: Black
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


LNUSP:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Imperative
  - 2-dimensional
  authors:
  - Zzo38
  esowiki: LNUSP
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.lnusp:
  type: Implementation
  implementation-of: LNUSP
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


1L:
  type: Programming Language Family
  genre: Esolang
  paradigms:
  - 2-dimensional
  family-members:
  - 1L_a
  - 1L_AOI
  esowiki: 1L


1L_a:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Imperative
  - 2-dimensional
  authors:
  - Catatonic Porpoise
  esowiki: 1L_a
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.onela:
  type: Implementation
  implementation-of: 1L_a
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


1L_AOI:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Imperative
  - 2-dimensional
  authors:
  - Tslil Clingman
  esowiki: 1L_AOI
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.onelaoi:
  type: Implementation
  implementation-of: 1L_AOI
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


PATH:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Imperative
  - 2-dimensional
  authors:
  - Francis Rogers
  esowiki: PATH
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.path:
  type: Implementation
  implementation-of: PATH
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


Qdeql:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Queue-based
  authors:
  - Catatonic Porpoise
  esowiki: Qdeql
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.qdeql:
  type: Implementation
  implementation-of: Qdeql
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


Sceql:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Queue-based
  authors:
  - Catatonic Porpoise
  esowiki: Sceql
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.sceql:
  type: Implementation
  implementation-of: Sceql
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


SNUSP:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Imperative
  - 2-dimensional
  authors:
  - Daniel Brockman
  esowiki: SNUSP
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.snusp:
  type: Implementation
  implementation-of: SNUSP
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


2-ill:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Imperative
  - 2-dimensional
  authors:
  - Zzo38
  esowiki: 2-ill
  influences:
  - 2L
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.twoill:
  type: Implementation
  implementation-of: 2-ill
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies


2L:
  type: Programming Language
  genre: Esolang
  paradigms:
  - Imperative
  - 2-dimensional
  authors:
  - Gregor Richards
  esowiki: 2L
  computational-class: unknown computational class
  specification-link: esowiki

tc.catseye.yoob.twol:
  type: Implementation
  implementation-of: 2L
  reference: no
  license: Public Domain
  host-language: Java
  host-platform: yoob
  implementation-type: interpreter
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
