# encoding: UTF-8
# also contains libraries (like Console::Virtual)
# Note: arguably:
# - Falderal is a language, and the testing tools are implementations of it
# - TPiS is an implementation of Scheme (a static checker) 
# - yucca is an implementation of BASIC (a static checker) 
'Console::Virtual':
  type: Library
  summary: Package for simulating a virtual console
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  abstract: |-
    `Console::Virtual` is a simple, lightweight abstraction layer which
    allows a program to interact with the user through a console, which
    is emulated on whatever user interface is really available.
  inception-date: ca 2003
  implementations:
  - 'Console::Virtual (Perl module)'
  reference-distribution: 'Console::Virtual distribution'

'Console::Virtual (Perl module)':
  type: Library Implementation
  in-distribution: 'Console::Virtual distribution'
  license: BSD
  host-language: Perl

crone: 
  type: Tool
  summary: Simple, non-polling cron-like scheduler
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  abstract: |-
    `crone` is a simple `cron`-like facility.  Unlike most `cron`s, it does
    not periodically activate and run whatever tasks are due to run; instead
    it calculates the amount of time between now and when the next is due
    to run, and sleeps exactly that long.
  inception-date: Unknown
  implementations:
  - crone.erl
  reference-distribution: 'crone distribution'

'crone.erl':
  type: Tool Implementation
  in-distribution: 'crone distribution'
  license: BSD
  host-language: Erlang

Falderal: 
  type: Tool
  subtitle: Literate Testing for Languages
  summary: Literate Testing for Languages
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  abstract: |-
    Falderal is a file format for literate test suites.  It is particularly
    suited for documenting programming languages (or other specifications of
    ways to transform text) and testing their implementation(s) in a
    language-agnostic fashion.  The dumbed-down sound-bite version:
    "doctests for DSLs".  It can be embedded in both Markdown and Literate
    Haskell.
  inception-date: 2011
  implementations:
  - Test.Falderal
  - py-falderal
  reference-distribution: 'Falderal distribution'

'Test.Falderal':
  type: Tool Implementation
  in-distribution: 'Falderal distribution'
  license: BSD
  host-language: Haskell

'py-falderal':
  type: Tool Implementation
  # well, this is actually not true yet, but:
  in-distribution: 'Falderal distribution'
  license: BSD
  host-language: Python

OpenFlax: 
  type: Tool
  summary: Experimental Erlang web server
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  abstract: |-
    OpenFlax is an experimental open-source web server written in 100% Erlang,
    designed with security and simplicity in mind.
  inception-date: ca 2002
  implementations:
  - OpenFlax (Erlang)
  reference-distribution: 'OpenFlax distribution'
  references: 
  - title: Inets
    description: Standard Erlang Webserver
    url: http://www.erlang.org/doc/r9b/lib/inets-3.0/doc/
  - title: yaws
    description: High-Performance Erlang Webserver
    url: http://sourceforge.net/projects/erlyaws/
  - title: 'femto'
    description: Tiny Erlang Webserver
    url: http://www.sics.se/~joe/tutorials/web_server/web_server.html
  - title: RFC 2616
    description: Spec for HTTP/1.1
    url: http://www.ietf.org/rfc/rfc2616.txt
  - title: RFC 2616 Errata
    description: Corrections in spec for HTTP/1.1
    url: http://skrb.org/ietf/http_errata.html

'OpenFlax (Erlang)':
  type: Tool Implementation
  in-distribution: 'OpenFlax distribution'
  license: BSD
  host-language: Erlang

TPiS: 
  type: Tool
  subtitle: Total Procedures in Scheme
  summary: Totality-checker for Scheme procedures
  authors:
  - Chris Pressey
  abstract: |-
    This is a static analyzer, written in Scheme, which can check if
    given Scheme procedures are total (always terminate, on any input) by
    checking that they are specified primitive-recursively.  What's more, it
    is written almost entirely in a primitive-recursive style, so it can
    check itself!
  inception-date: Unknown
  implementations:
  - TPiS (Scheme)
  reference-distribution: 'TPiS distribution'

'TPiS (Scheme)':
  type: Tool Implementation
  in-distribution: 'TPiS distribution'
  license: BSD
  host-language: Scheme

yucca: 
  type: Tool
  summary: Static analyzer for 8-bit BASIC programs
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  abstract: |-
    `yucca` is a dialect-agnostic static analyzer for 8-bit BASIC
    programs.  It can find `GOTO`'s and `GOSUB`'s
    which refer to non-existent line numbers, or line numbers which contain
    only a `REM`, among a few other modest features.
  inception-date: 2012
  implementations:
  - yucca (Python)
  reference-distribution: 'yucca distribution'

'yucca (Python)':
  type: Tool Implementation
  in-distribution: 'yucca distribution'
  license: MIT
  host-language: Python
