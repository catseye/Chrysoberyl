# encoding: UTF-8
# also contains the distributions for these tools
# also contains libraries (like Console::Virtual)
# Note: arguably:
# - Falderal is a language, and the testing tools are implementations of it
# - TPiS is an implementation of Scheme (a static checker) 
# - yucca is an implementation of BASIC (a static checker) 

'Console::Virtual':
  type: Library
  summary: Package for simulating a virtual console
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  description: |
    `Console::Virtual` is a simple, lightweight abstraction layer which
    allows a program to interact with the user through a console, which
    is emulated on whatever user interface is really available.
  as-a-prerequisite: |
      This [[Perl]] project uses [[Cat's Eye Technologies]]' own
      `Console::Virtual` interface to provide a simulated console on
      which to display random-access, coloured textual
      output, and from which to take raw key input.
      Running the programs of the project will require that
      version 2007.1122 or later of the `Console::Virtual`
      module, or some other module which provides a compatible
      interface, be installed.
  inception-date: ca 2003
  implementations:
  - 'Console::Virtual (Perl module)'

'Console::Virtual (Perl module)':
  type: Library Implementation
  in-distribution: 'Console::Virtual distribution'
  license: BSD
  host-language: Perl

'Console::Virtual distribution': 
  type: Distribution
  distribution-of: 'Console::Virtual'
  bitbucket: catseye/console-virtual
  github: catseye/Console-Virtual
  issue-tracker: github
  project-page: 'http://catseye.tc/projects/console-virtual/'
  releases: 
  - version: "2.0"
    revision: "2007.1122"
    latest: true
    url: http://catseye.tc/distfiles/cons_virt-2007.1122.zip
  - version: "1.0"
    revision: "2003.0325"
    latest: false
    url: http://catseye.tc/distfiles/cons_virt-2003.0325.zip


crone: 
  type: Tool
  summary: Simple, non-polling cron-like scheduler
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  description: |
    `crone` is a simple `cron`-like facility.  Unlike most `cron`s, it does
    not periodically activate and run whatever tasks are due to run; instead
    it calculates the amount of time between now and when the next is due
    to run, and sleeps exactly that long.
  inception-date: Unknown
  implementations:
  - crone.erl

crone.erl:
  type: Tool Implementation
  in-distribution: 'crone distribution'
  license: BSD
  host-language: Erlang

crone distribution: 
  type: Distribution
  distribution-of: crone
  bitbucket: catseye/crone
  github: catseye/crone
  issue-tracker: github
  project-page: 'http://catseye.tc/projects/crone/'
  releases: 
  - version: "1.0"
    revision: "2004.0301"
    latest: true
    url: http://catseye.tc/distfiles/crone-2004.0301.zip


Falderal: 
  type: Tool
  subtitle: Literate Testing for Languages
  summary: Literate Testing for Languages
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  description: |
    Falderal is a file format for literate test suites.  It is particularly
    suited for documenting programming languages (or other specifications of
    ways to transform text) and testing their implementation(s) in a
    language-agnostic fashion.  The dumbed-down sound-bite version:
    "doctests for DSLs".  It can be embedded in both Markdown and Literate
    Haskell.
  as-a-prerequisite: |
    In order to run the tests (and possibly rebuild the documentation) for
    this project, you will need the `Test.Falderal` Haskell package (or some
    other tool which understands the Falderal Literate Test Format, version
    0.4) installed.
    
    (Note: update the version number in the above paragraph and mention
    py-falderal.)
  inception-date: 2011
  implementations:
  - Test.Falderal
  - py-falderal

Test.Falderal:
  type: Tool Implementation
  in-distribution: 'Falderal distribution'
  license: BSD
  host-language: Haskell

py-falderal:
  type: Tool Implementation
  # well, this is actually not true yet, but:
  in-distribution: Falderal distribution
  license: BSD
  host-language: Python

Falderal distribution: 
  type: Distribution
  distribution-of: Falderal
  bitbucket: catseye/falderal
  github: catseye/Falderal
  issue-tracker: 'https://bitbucket.org/catseye/falderal/issues'
  project-page: 'http://catseye.tc/projects/falderal/'
  releases: 
  - version: "0.6"
    revision: "2012.0102"
    latest: true
    url: http://catseye.tc/distfiles/falderal-0.6-2012.0102.zip
  - version: "0.5"
    revision: "2011.1214"
    latest: false
    url: http://catseye.tc/distfiles/falderal-0.5-2011.1214.zip
  - version: "0.4"
    revision: "2011.1010"
    latest: false
    url: http://catseye.tc/distfiles/falderal-0.4-2011.1010.zip
  - version: "0.3"
    revision: "2011.1007"
    latest: false
    url: http://catseye.tc/distfiles/falderal-0.3-2011.1007.zip
  - version: "0.2"
    revision: "2011.0627"
    latest: false
    url: http://catseye.tc/distfiles/falderal-0.2-2011.0627.zip
  - version: "0.1"
    revision: "2011.0517"
    latest: false
    url: http://catseye.tc/distfiles/falderal-0.1-2011.0517.zip


mzstorkipiwanbotbotbot: 
  type: Tool
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  description: |
    An IRC bot with no purpose or plan.
  inception-date: Unknown
  implementations:
  - mzstorkipiwanbotbotbot (Lua)
  - Rtype

mzstorkipiwanbotbotbot (Lua):
  type: Tool Implementation
  in-distribution: mzstorkipiwanbotbotbot distribution
  license: Public Domain
  host-language: Lua

Rtype:
  type: Tool Implementation
  in-distribution: mzstorkipiwanbotbotbot distribution
  license: Public Domain
  host-language: R

mzstorkipiwanbotbotbot distribution: 
  type: Distribution
  distribution-of: mzstorkipiwanbotbotbot
  bitbucket: catseye/mzstorkipiwanbotbotbot
  github: catseye/mzstorkipiwanbotbotbot
  issue-tracker: github
  releases: []


toolshelf: 
  type: Tool
  summary: A "package manager" that doesn't actually install anything
  authors:
  - Chris Pressey
  description: |
    `toolshelf` is a "package manager" which doesn't actually install any files.
    Instead, it stores the source trees of sundry packages in a single directory,
    and manages your search paths to include the relevant subdirectories of
    those trees. The source trees are typically the working directories of
    local git or Mercurial clones, or they can be source distributions from tarballs.
  inception-date: 2012
  implementations:
  - toolshelf.py

toolshelf.py:
  type: Tool Implementation
  in-distribution: toolshelf distribution
  license: MIT
  host-language: Python

toolshelf distribution: 
  type: Distribution
  distribution-of: toolshelf
  bitbucket: catseye/toolshelf
  github: catseye/toolshelf
  issue-tracker: github
  releases: []


TPiS: 
  type: Tool
  subtitle: Total Procedures in Scheme
  summary: Totality-checker for Scheme procedures
  authors:
  - Chris Pressey
  description: |
    This is a static analyzer, written in Scheme, which can check if
    given Scheme procedures are total (always terminate, on any input) by
    checking that they are specified primitive-recursively.  What's more, it
    is written almost entirely in a primitive-recursive style, so it can
    check itself!
  inception-date: ca 2006
  implementations:
  - TPiS (Scheme)

'TPiS (Scheme)':
  type: Tool Implementation
  in-distribution: TPiS distribution
  license: BSD
  host-language: Scheme

TPiS distribution: 
  type: Distribution
  distribution-of: TPiS
  bitbucket: catseye/tpis
  github: catseye/TPiS
  issue-tracker: github
  releases: 
  - version: "1.0"
    revision: "2006.0528"
    latest: true
    url: http://catseye.tc/distfiles/tpis-2006.0528.zip


yucca: 
  type: Tool
  summary: Static analyzer for 8-bit BASIC programs
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  description: |
    `yucca` is a dialect-agnostic static analyzer for 8-bit BASIC
    programs.  It can find `GOTO`'s and `GOSUB`'s
    which refer to non-existent line numbers, or line numbers which contain
    only a `REM`, among a few other modest features.
  inception-date: 2012
  implementations:
  - yucca (Python)

'yucca (Python)':
  type: Tool Implementation
  in-distribution: yucca distribution
  license: MIT
  host-language: Python

yucca distribution: 
  type: Distribution
  distribution-of: yucca
  bitbucket: catseye/yucca
  github: catseye/yucca
  issue-tracker: github
  project-page: 'http://catseye.tc/projects/yucca/'
  releases: 
  - version: "1.0"
    revision: "2012.0610"
    latest: true
    url: http://catseye.tc/distfiles/yucca-1.0-2012.0610.zip
