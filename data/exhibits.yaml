# encoding: UTF-8
### Exhibits ###

Featured Exhibit:
  type: Exhibit
  title: ★ Featured
  id: featured_exhibit
  description: |
    These online installations have been hand-picked by our
    experts to provide you with hours of enjoyment (or minutes,
    depending on your attention span.)   But be sure to
    check out the other exhibits in the other tabs as well,
    before you go.

Esolangs Exhibit:
  type: Exhibit
  title: Esolangs
  id: esolangs_exhibit
  description: |
    [[Esolang|Esoteric programming languages]] with which you
    can experiment.  By selecting sample
    programs and watching them run, you can gain an appreciation of how the
    esolang works; by composing your own programs, you can gain an
    even better appreciation.

Digital Art Exhibit:
  type: Exhibit
  title: Gewgaws
  id: gewgaws_exhibit
  description: |
    Digital art (audiovisual, animated, interactive, or otherwise) which you
    can experience online.  (That's not to say that
    [[Programming Languages as an Artistic Medium|esolangs]]
    and [video games](http://www.moma.org/explore/inside_out/2012/11/29/video-games-14-in-the-collection-for-starters/)
    aren't art *too*, of course.)

Computer Games Exhibit:
  type: Exhibit
  title: Games
  id: games_exhibit
  description: |
    [[Game]]s which you can play online.  Some games are for
    the [[Commodore 64]], and these ones are web-enabled by the
    [[JaC64]] Java™ applet.

Music Exhibit:
  type: Exhibit
  title: Music
  id: music_exhibit
  description: |
    All of the [[Musical Composition|musical compositions]] by
    [[What is this I don't even]] for which we have [[mp3|MP3's]]
    on this website.  You can play them online here if you have
    a Flash player in your browser.

Pictures Exhibit:
  type: Exhibit
  title: Pictures
  id: pictures_exhibit
  description: |
    Pictures — drawings, paintings, photos, computer-generated images, whatever.
    
    Note that concrete poetry and the like may be
    listed under this tab, or Texts, or both.

Texts Exhibit:
  type: Exhibit
  title: Texts
  id: texts_exhibit
  description: |
    Texts. But isn't everything in [[Chrysoberyl]] a text
    of some sort?  Yes, but those are texts *about* something.
    These are texts that stand as works on their own.
    
    Note that concrete poetry and the like may be
    listed under this tab, or Pictures, or both.

### Games ###

'Bubble Escape (JaC64)':
  type: Online Installation
  installation-of: Bubble Escape 2K
  exhibits:
  - Computer Games Exhibit
  - Featured Exhibit
  interactive: true
  animated: true
  mediums:
  - 6502 machine code
  - JaC64
  - Java applet
  - HTML5
  summary: |
    [[Bubble Escape 2K]] is an [[Mini Game Compo 2009|award-winning]]
    video game where you guide a soap bubble through a multi-screen maze.
    You can play it online in this applet running [[JaC64]].
    Use your arrow keys to guide the bubble through the maze.  Avoid the
    hazards and find the five keys to unlock the exit.
  description: |
    [[Bubble Escape 2K]] is an video game where you guide a soap bubble
    through a multi-screen maze.  Based on the cheesy original written in
    [[Commodore BASIC 2.0|BASIC]] in the 80's, this version
    was rewritten in [[Ophis Assembler|6502 assembly]], crunched to fit
    into 2K, and submitted to the [[Mini Game Compo 2009]], where
    it got first place in its class.
  commentary: |
    If this game doesn't seem too impressive to you, try to remember, it's
    only two kilobytes of code!  These days you can't even sneeze in less
    than a megabyte.

'Super Wumpus Land (HTML5)':
  type: Online Installation
  installation-of: swl.js
  exhibits:
  - Computer Games Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  summary: |
    [[Super Wumpus Land]], our "extended dance mix" version of
    Gregory Yob's [[Hunt the Wumpus]], is playable online in an
    HTML5 canvas simulating an old-school green-screen terminal.
  description: |
    [[Super Wumpus Land]], our "extended dance mix" version of
    Gregory Yob's [[Hunt the Wumpus]], is playable online in an
    HTML5 canvas simulating an old-school green-screen terminal.

### Esolangs ###

'Braktif (HTML5)':
  type: Online Installation
  installation-of: braktif.alp
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  ca-definition-link: https://github.com/catseye/Braktif/blob/master/src/braktif.alp
  description: |
    The [[Braktif]] cellular automaton, compiled to Javascript using [[ALPACA]]
    and animated using [[yoob.js]].

'Circute (HTML5)':
  type: Online Installation
  installation-of: circute.alp
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  ca-definition-link: https://github.com/catseye/Circute/blob/master/src/circute.alp
  description: |
    The [[Circute]] cellular automaton, compiled to Javascript using [[ALPACA]]
    and animated using [[yoob.js]].

'Etcha (HTML5)':
  type: Online Installation
  installation-of: etcha.js
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    This is an online implementation of [[Etcha]], a 2-dimensional esolang
    which could be thought of as an attempt to combine [[Jeffry Johnston]]'s
    [[BitChanger]] with turtle graphics.

'Gemooy (HTML5)':
  type: Online Installation
  installation-of: gemooy.js
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    [[Gemooy]] is a 2-dimensional esolang with 3 instructions (5 initial symbols).
    This online Gemooy interpreter is implemented in Javascript, on an HTML5 canvas.

'Jaccia (HTML5)':
  type: Online Installation
  installation-of: jaccia.alp
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  ca-definition-link: https://github.com/catseye/Jaccia/blob/master/src/jaccia.alp
  summary: |
    The [[Jaccia]] cellular automaton, which demonstrates that cellular automata are
    [intelligent maze-solvers, just like slime molds](http://web.archive.org/web/20020220163303/http://www.riken.go.jp/lab-www/frontier-div/NEWSLETTER/feb2001/ameboid_e.htm).
  description: |
    The [[Jaccia]] cellular automaton, compiled to Javascript using [[ALPACA]]
    and animated using [[yoob.js]].
    
    Jaccia demonstrates that cellular automata are
    [intelligent maze-solvers, just like slime molds](http://web.archive.org/web/20020220163303/http://www.riken.go.jp/lab-www/frontier-div/NEWSLETTER/feb2001/ameboid_e.htm).
    See also [[Jacciata (HTML5)]].

'Jacciata (HTML5)':
  type: Online Installation
  installation-of: jacciata.alp
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  ca-definition-link: https://github.com/catseye/Jaccia/blob/master/src/jacciata.alp
  summary: |
    The [[Jacciata]] cellular automaton, which demonstrates that cellular automata are
    [intelligent maze-solvers, just like slime molds](http://web.archive.org/web/20020220163303/http://www.riken.go.jp/lab-www/frontier-div/NEWSLETTER/feb2001/ameboid_e.htm).
  description: |
    The [[Jacciata]] cellular automaton, compiled to Javascript using [[ALPACA]]
    and animated using [[yoob.js]].
    
    Jacciata demonstrates that cellular automata are
    [intelligent maze-solvers, just like slime molds](http://web.archive.org/web/20020220163303/http://www.riken.go.jp/lab-www/frontier-div/NEWSLETTER/feb2001/ameboid_e.htm).
    See also [[Jaccia (HTML5)]].

"noit o' mnain worb (HTML5)":
  type: Online Installation
  installation-of: worb.js
  exhibits:
  - Esolangs Exhibit
  - Featured Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    [[noit o' mnain worb]] is a probabilistic particle automaton.
    This online interpreter is implemented in Javascript, on an HTML5 canvas.

'Pixley (HTML5)':
  type: Online Installation
  installation-of: pixley.js
  # arguably Pixley is not an esolang, or at least not a very eso one.
  exhibits:
  - Esolangs Exhibit
  - Featured Exhibit
  interactive: true
  animated: false
  mediums:
  - Javascript
  - Web Workers
  - HTML5
  description: |
    This is an online implementation of [[Pixley]], an extremely small
    subset of [[Scheme]], with only 12 built-in functions.
    
    This online installation also depicts the Pixley program as a
    series of coloured, nested rectangles.
  commentary: |
    This [[Javascript]] implementation of Pixley uses the *Web Workers*
    facility of your browser to run the evaluation process.  So, if your
    browser does not support Web Workers, it may not function correctly.
    
    For the Pixley project, a Pixley interpreter was implemented in
    Pixley itself ("meta-circularly") and in this installation,
    the **Wrap in Pixley Interpreter** button will take the Pixley
    program that has been loaded and put it inside this
    Pixley-interpreter-in-Pixley.
    
    Evaluating a program wrapped in a Pixley interpreter will result
    in the same result as the unwrapped program.  It will just take
    longer.
    
    Evaluating a program wrapped in a Pixley interpreter
    *wrapped in a Pixley interpreter* will also result
    in the same result as the unwrapped program.  It will just take
    *quite a bit* longer.
    
    In theory, this "tower" of wrapped interpreters could go on forever,
    and they should all produce the same result.
    
    However, in physical reality, computers have limitations, such as
    a finite amount of memory available.  In my installation of Firefox,
    for example, wrapping a program in three levels of interpreters
    results in a "stack overflow" error being displayed in the Javascript
    console, and the evaluation process never finishing.
  instructions: |
    Select an example program from the dropdown box,
    then click "Start" to run it.  Or click "Edit" to modify an example
    program, or create your own program.

'REDGREEN (HTML5)':
  type: Online Installation
  installation-of: redgreen.alp
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  ca-definition-link: https://github.com/catseye/REDGREEN/blob/master/src/redgreen.alp
  description: |
    The [[REDGREEN]] cellular automaton, compiled to Javascript using [[ALPACA]]
    and animated using [[yoob.js]].

# about'ed (only esolang that is, so far)
'Shelta (v86)':
  type: Online Installation
  # ... and sheltas, but ok
  installation-of: shelta
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: true
  mediums:
  - x86 machine code
  - FreeDOS
  - v86
  - HTML5
  summary: |
    This is [[Shelta]], a language with a tiny compiler and a
    self-hosted compiler, running under [[FreeDOS]] under [[v86]]
    on a web page, so you can bootstrap it right in your browser.
  description: |
    This is [[Shelta]] running under [[FreeDOS]] running under the
    [[HTML5]]-based [[IBM PC compatible]] emulator, [[v86]].
    
    You may want to read the documentation for Shelta here:
    
    *   [Original Shelta README, 1999](https://github.com/catseye/Shelta/blob/master/doc/readme.txt)
    *   [Making the Snake Eat its Tail: Bootstrapping](https://github.com/catseye/Shelta/blob/master/doc/bootstrp.txt)
    *   [Shelta in NASM, 2009](https://github.com/catseye/Shelta/blob/master/doc/nasm2009.txt)
    *   [Shelta under FreeDOS, 2013](https://github.com/catseye/Shelta/blob/master/doc/fdos2013.txt)
    
    The system running online on v86 is delivered on a 360K floppy image,
    which contains:
    
    *   Minimal system files for FreeDOS 1.0 ([[GPL]])
    *   The relevant parts of the Shelta distribution ([[Freely Redistributable]])
    *   FreeDOS's `DEBUG.COM` ([[GPL]])
    *   The `TED3` text editor (Freeware)
    
    You can use the pre-built Shelta compiler (whose source is written in NASM)
    to build the example programs, or to bootstrap the Shelta compiler
    written in Shelta.  See the welcome message, shown after FreeDOS
    boots, for more details.
    
    If v86 doesn't work in your browser, you can
    [download the disk image](http://catseye.tc/distfiles/freedos-1.0-shelta-1.2-floppy-1.img)
    and use it in an emulator such as [[QEMU]] or [[Bochs]] or [[DOSBox]]
    or, wonder of wonders, a real IBM PC compatible — if you can write it onto
    a floppy disk somehow...
    
    The TED3 distribution can be found
    [here](http://ftp.mpoli.fi/software/DOS/EDITORS/).  The disk image
    includes the entire distribution, including the manual.  I also take the
    position that this disk image is a "mere aggregation", so the GPL doesn't
    extend its viral reach to any of the other programs.

'Whothm (Applet)':
  type: Online Installation
  installation-of: tc.catseye.whothm
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: false
  mediums:
  - Java applet
  - HTML5
  summary: |
    [[Whothm]] is a simple language for describing infinite two-colour bitmapped graphics.  This exhibit contains a Java applet
    which implements Whothm, and lets you interactively try out Whothm programs online.
  description: |
    [[Whothm]] is a simple language for describing infinite two-colour bitmapped graphics.  This exhibit contains a Java applet
    which implements Whothm, and lets you interactively try out Whothm programs online.  The implementation is only
    an approximation; only a small portion of the infinite drawing (a couple of hundred iterations) is rendered.  The rest is
    left up to your imagination.

'yoob (Applet)':
  type: Online Installation
  installation-of: tc.catseye.yoob
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: true
  mediums:
  - Java applet
  - HTML5
  description: |
    [[yoob]] is a public-domain framework for implementing
    [[Esolang|esoteric programming languages]], and allowing them to be
    interactively run on programs in a Java™ applet.
    
    Currently, yoob can interpret 21 languages: [[1L_AOI]], [[1L_a]], [[2-ill]], [[2L]],
    [[Ale]], [[BackFlip]], [[Befunge-93]], [[Black]], [[brainfuck]], [[Circute]], [[Etcha]],
    [[Gemooy]], [[LNUSP]], [[noit o' mnain worb]], [[PATH]], [[Qdeql]], [[Sceql]],
    [[SMETANA]], [[SNUSP]], [[Wunnel]], and [[Ypsilax]].  This exhibit shows yoob in
    action, and lets you play with all these esolangs online.

'ZOWIE (HTML5)':
  type: Online Installation
  installation-of: zowie.py
  exhibits:
  - Esolangs Exhibit
  interactive: true
  animated: false
  mediums:
  - Python
  - Skulpt
  - Javascript
  - HTML5
  summary: |
    This is an HTML5-based interpreter for the
    esoteric programming language [[ZOWIE]].  
  description: |
    This is an [[HTML5]]-based interpreter for the
    [[Esolang|esoteric programming language]] [[ZOWIE]].
    The reference implementation of the interpreter, written in [[Python]],
    is itself being interpreted by [[Skulpt]], written in [[Javascript]].
    
    Input is not yet supported, and errors are not yet handled
    in a user-friendly way, but it does work, as the example sources show.


### Digital Art ###

'A Non-Random Walk (HTML5)':
  type: Online Installation
  installation-of: a-non-random-walk.js
  exhibits:
  - Digital Art Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  canvas-width: 600
  canvas-height: 360
  control-panel: |
    <button id="reset" onclick="t.reset();">Reset</button>
  javascript-urls:
  - ../modules/html5-gewgaws/common-yoob.js-0.5/animation-frame.js
  - ../modules/html5-gewgaws/common-yoob.js-0.5/sprite-manager.js
  - ../modules/html5-gewgaws/a-non-random-walk/a-non-random-walk.js
  javascript-main: |
    var t = new NonRandomWalk();
    t.init(document.getElementById('canvas'));

'Chzrxl (HTML5)':
  type: Online Installation
  installation-of: chzrxl.js
  exhibits:
  - Digital Art Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  canvas-width: 400
  canvas-height: 400
  control-panel: |
    <br>% to hold fixed:
    <input id="hold_fixed" type="range" min="0" max="100" value="5"/>
    <button id="restart" onclick="t.restart()">Restart</button>
  javascript-urls:
  - ../modules/html5-gewgaws/common-yoob.js-0.5/animation-frame.js
  - ../modules/html5-gewgaws/chzrxl/chzrxl.js
  javascript-main: |
    var t = new Chzrxl();
    t.init(document.getElementById('canvas'));

'Cyclobots (HTML5)':
  type: Online Installation
  installation-of: cyclobots.js
  exhibits:
  - Digital Art Exhibit
  - Featured Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  summary: |
    An in-browser implementation of [[Cyclobots]].
  description: |
    Each "cyclobot" tries to follow exactly one other cyclobot, adjusting
    its heading to point towards the cyclobot it is following.
    No cylobot is followed by more than one cyclobot.
  instructions: |
    When a revolution occurs, every cyclobot picks a new cyclobot to follow
    at random.
    In case the cyclobots leave the viewable area of the playfield,
    dragging on the playfield will scroll it.

'Fibonacci Spiral (HTML5)':
  type: Online Installation
  installation-of: fibonacci-spiral.js
  exhibits:
  - Digital Art Exhibit
  interactive: false
  animated: true
  mediums:
  - Javascript
  - HTML5
  canvas-width: 1000
  canvas-height: 500
  javascript-urls:
  - ../modules/html5-gewgaws/common-yoob.js-0.5/animation-frame.js
  - ../modules/html5-gewgaws/fibonacci-spiral/fibonacci-spiral.js
  javascript-main: |
    var t = new FibonacciSpiral();
    t.init(document.getElementById('canvas'));

'Fingerspelling (HTML5)':
  type: Online Installation
  installation-of: fingerspelling.js
  exhibits:
  - Digital Art Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5

'Hirsute Miasma (HTML5)':
  type: Online Installation
  installation-of: hirsute-miasma.js
  exhibits:
  - Digital Art Exhibit
  - Featured Exhibit
  interactive: false
  animated: true
  mediums:
  - Javascript
  - HTML5

'Heronsis hermnonicii (HTML5)':
  type: Online Installation
  installation-of: heronsis-hermnonicii.js
  exhibits:
  - Digital Art Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5

'Hypongtrochoid (HTML5)':
  type: Online Installation
  installation-of: hypongtrochoid.js
  exhibits:
  - Digital Art Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5

'Multicolouralism (HTML5)':
  type: Online Installation
  installation-of: multicolouralism.js
  exhibits:
  - Digital Art Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5

'Plea of Thunder (Applet)':
  type: Online Installation
  # WAIT WHAT SRSLY HA NO
  installation-of: hugs
  exhibits:
  - Digital Art Exhibit
  interactive: false
  animated: true
  mediums:
  - Java applet
  - HTML5

'Prairie (HTML5)':
  type: Online Installation
  installation-of: prairie.js
  exhibits:
  - Digital Art Exhibit
  interactive: false
  animated: true
  mediums:
  - Javascript
  - HTML5
  canvas-width: 640
  canvas-height: 390
  border-colour: blue
  javascript-urls:
  - ../modules/html5-gewgaws/common-yoob.js-0.5/animation-frame.js
  - ../modules/html5-gewgaws/prairie/prairie.js
  javascript-main: |
    new PrairieController().start(
      document.getElementById('canvas'),
      '../modules/html5-gewgaws/prairie/Elevator_1_(PSF).png'
    );

'Progression (HTML5)':
  type: Online Installation
  installation-of: progression.js
  exhibits:
  - Digital Art Exhibit
  - Featured Exhibit
  interactive: false
  animated: true
  mediums:
  - Javascript
  - HTML5

'The Frame (HTML5)':
  type: Online Installation
  installation-of: the-frame.js
  exhibits:
  - Digital Art Exhibit
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
