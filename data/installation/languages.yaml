# encoding: UTF-8

'BefOS':
  type: Online Installation
  installation-of: BefOS (NASM)
  interactive: true
  animated: true
  mediums:
  - x86 machine code
  - v86
  - HTML5
  description: |
    This is an HTML5 installation of [[BefOS]], a Befunge-themed operating
    system which is neither Befunge, nor an operating system.  (Discuss.)
    It runs on a web page thanks to the
    [[HTML5]]-based [[IBM PC compatible]] emulator, [[v86]].
  instructions: |
    The system is delivered on a 1.44M floppy image, which contains the
    BefOS boot block, kernal, and the handful of sample pages which are
    included in the default build.
    
    If v86 doesn't work in your browser, you can
    [download the disk image](http://catseye.tc/distfiles/befos-0.10.img)
    and use it in an emulator such as [[QEMU]] or [[Bochs]] or [[DOSBox]]
    or, wonder of wonders, a real IBM PC compatible — if you can write it onto
    a floppy disk somehow...

'Braktif':
  type: Online Installation
  installation-of: braktif.alp
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    This is the [[Braktif]] cellular automaton, compiled to Javascript
    using [[ALPACA]] and animated using [[yoob.js]].
  instructions: |
    Select an example program from the dropdown box, then click "Start" to run
    it. Or click "Edit" to modify an example program, or create your own program.

'Circute':
  type: Online Installation
  installation-of: circute.alp
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    This is the [[Circute]] cellular automaton, compiled to Javascript
    using [[ALPACA]] and animated using [[yoob.js]].
  instructions: |
    Select an example configuration from the dropdown box,
    then click "Start" to run it.  Or click "Edit" to modify an example,
    or create your own.

'Etcha':
  type: Online Installation
  installation-of: etcha.js
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    This in-browser installation of [[Etcha]] is implemented in
    [[Javascript]], using [[yoob.js]].
  instructions: |
    Click "Start" to run the supplied example program.  Or click "Edit" to
    modify it, and create your own program.

'Gemooy':
  type: Online Installation
  installation-of: gemooy.js
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    This in-browser installation of [[Gemooy]] is implemented in
    [[Javascript]], using [[yoob.js]].
  instructions: |
    Select an example program from the dropdown box, then click "Start" to run
    it. Or click "Edit" to modify an example program, or create your own program.

'Jaccia':
  type: Online Installation
  installation-of: jaccia.alp
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    This is the [[Jaccia]] cellular automaton, compiled to Javascript
    using [[ALPACA]] and animated using [[yoob.js]].
  instructions: |
    Select an example configuration from the dropdown box,
    then click "Start" to run it.  Or click "Edit" to modify an example,
    or create your own.
  see-also:
  - installation/Jacciata

'Jacciata':
  type: Online Installation
  installation-of: jacciata.alp
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  summary: |
  description: |
    This is the [[Jacciata]] cellular automaton, compiled to Javascript
    using [[ALPACA]] and animated using [[yoob.js]].
  instructions: |
    Select an example configuration from the dropdown box,
    then click "Start" to run it.  Or click "Edit" to modify an example,
    or create your own.
  see-also:
  - installation/Jaccia

Matchbox:
  type: Online Installation
  installation-of: matchbox.js
  interactive: false
  animated: true
  mediums:
  - Javascript
  - HTML5
  instructions: |
    Select an example configuration from the dropdown box, click "Run"
    to run either of the programs individually, or "Find Race Conditions"
    to compute all interleavings of the two programs and look for race
    conditions between them.
  javascript-module: matchbox
  javascript-urls:
  - src/matchbox-launcher.js
  script-root: ../modules/matchbox/src/
  launch-config: |
    {
      'sourceRoot': '../modules/matchbox/eg/',
      'workerURL': '../modules/matchbox/src/matchbox-worker.js'
    }

"noit o' mnain worb":
  type: Online Installation
  installation-of: worb.js
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    This online interpreter for the
    [[noit o' mnain worb]] probabilistic particle automaton
    is implemented in Javascript, on an HTML5 canvas.
  instructions: |
    Select an example configuration from the dropdown box,
    then click "Start" to run it.  Or click "Edit" to modify an example,
    or create your own.

'Pixley':
  type: Online Installation
  installation-of: pixley.js
  interactive: true
  animated: false
  mediums:
  - Javascript
  - Web Workers
  - HTML5
  description: |
    This is an online implementation of [[Pixley]] which, as a bonus, also
    depicts the Pixley program as a set of coloured, nested rectangles.
  instructions: |
    Select an example program from the dropdown box,
    then click "Start" to run it.  Or click "Edit" to modify an example
    program, or create your own program.

'REDGREEN':
  type: Online Installation
  installation-of: redgreen.alp
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    This is the [[REDGREEN]] cellular automaton, compiled to Javascript using [[ALPACA]]
    and animated using [[yoob.js]].
  instructions: |
    Select an example configuration from the dropdown box,
    then click "Start" to run it.  Or click "Edit" to modify an example,
    or create your own.

Schrödinger's Game of Life:
  type: Online Installation
  installation-of: slife.js
  interactive: false
  animated: true
  mediums:
  - Javascript
  - HTML5
  script-root: ../modules/schroedingers-game-of-life/impl/slife.js/src/yoob/
  javascript-module: schroedingers-game-of-life
  javascript-urls:
  - impl/slife.js/src/slife.js
  launch-config: |
    {
      'sourceRoot': '../modules/schroedingers-game-of-life/eg/'
    }

'Shelta':
  type: Online Installation
  # ... and sheltas, but ok
  installation-of: shelta
  interactive: true
  animated: true
  mediums:
  - x86 machine code
  - FreeDOS
  - v86
  - HTML5
  description: |
    This is [[Shelta]], a language with a tiny compiler and a
    self-hosted compiler, running under [[FreeDOS]] running
    on a web page via the [[HTML5]]-based [[IBM PC compatible]]
    emulator, [[v86]] —  so you can bootstrap it right in your browser.
  instructions: |
    The system running online on v86 is delivered on a 720K floppy image,
    which contains a minimal bootable FreeDOS install, the Shelta distribution,
    plus various tools such as the `TED3` text editor, and `YASM`.
    License and distribution information is included on the disk image.
    
    You can use the pre-built Shelta compiler (whose source is written in NASM)
    to build the example programs, or to bootstrap the Shelta compiler
    written in Shelta.  See the welcome message, shown after FreeDOS
    boots, for more details.
    
    Documentation for Shelta is also on the disk image, and can be viewed
    with `TYPE` or `EDIT`, but you may find it more convenient to browse
    these files online:
    
    *   [Original Shelta README, 1999](https://github.com/catseye/Shelta/blob/master/doc/readme.txt)
    *   [Making the Snake Eat its Tail: Bootstrapping](https://github.com/catseye/Shelta/blob/master/doc/bootstrp.txt)
    *   [Shelta in NASM, 2009](https://github.com/catseye/Shelta/blob/master/doc/nasm2009.txt)
    *   [Shelta under FreeDOS, 2013](https://github.com/catseye/Shelta/blob/master/doc/fdos2013.txt)
    
    If v86 doesn't work in your browser, you can
    [download the disk image](http://catseye.tc/distfiles/freedos-1.0-shelta-1.2-floppy-2.img)
    and use it in an emulator such as [[QEMU]] or [[Bochs]] or [[DOSBox]]
    or, wonder of wonders, a real IBM PC compatible — if you can write it onto
    a floppy disk somehow...


Wierd (John Colagioia):
  type: Online Installation
  installation-of: wierd-jnc.js
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  script-root: ../modules/wierd/dialect/wierd-jnc/impl/wierd-jnc.js/src/yoob/
  javascript-module: wierd
  javascript-urls:
  - dialect/wierd-jnc/impl/wierd-jnc.js/src/wierd-jnc.js
  launch-config: |
    {
      'sourceRoot': '../modules/wierd/dialect/wierd-jnc/eg/'
    }


'Wunnel':
  installation-of: wunnel.js
  type: Online Installation
  interactive: true
  animated: true
  mediums:
  - Javascript
  - HTML5
  description: |
    This is an HTML5-based implementation of the
    esoteric programming language [[Wunnel]].
  instructions: |
    Select an example program from the drop-down (or click Edit and
    compose your own,) then click Run.
    
    When `INP` is highlighted in the instruction matrix, the program is
    waiting for input.  Click on the Input text box and input some
    `0`s and `1`s (Wunnel programs take bits as input.)  The program
    will consume them in order, and continue running.


'ZOWIE':
  type: Online Installation
  installation-of: zowie.py
  interactive: true
  animated: false
  mediums:
  - Python
  - Skulpt
  - Javascript
  - HTML5
  description: |
    This is an [[HTML5]]-based interpreter for the
    [[Esolang|esoteric programming language]] [[ZOWIE]].
    The reference implementation of the interpreter, written in [[Python]],
    is itself being interpreted by [[Skulpt]], written in [[Javascript]].
  instructions: |
    Input is not yet supported, and errors are not yet handled
    in a user-friendly way, but it does work, as the example sources show.
    
    Select an example program from the dropdown box, then click "Run" to
    run it.  Or edit an example program in the text box, or create your own
    program.
