# encoding: UTF-8
# also contains the distributions for these processors


Canvas Feedback:
  type: Gewgaw
  development-stage: mature
  defining-distribution: HTML5 Gewgaws distribution
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  inception-date: 2013
  description: |
    An application of an analogue-video-like feedback effect to an [[HTML5]]
    canvas element, with in-browser controls by which the feedback properties
    can be adjusted.  For some background and an explanation
    of how it works, see
    [its README document](https://github.com/catseye/Canvas-Feedback/).
  instructions: |
    To begin exploring, we suggest you first try different presets
    from the *Presets* drop-down in the control panel on the right.
    
    You can also paste the URL of an image in the *Image URL* text box,
    and click "Load", to try a different image.
    
    If you want to get your hands dirty, you can open the *Adjustments*
    panel, in which you will find various sliders with which you can
    control all the parameters.
    
    #### How can I save an image?
    
    In Firefox, you can right-click on the canvas and select "View image",
    and save that.  In other browsers, the easiest way may be to click the
    _Pause_ button and take a screenshot.
    (You can thank the security model used in the HTML5 canvas for this.)

    #### The animation isn't perfectly smooth.
    
    This is an unavoidable consequence of conventional operating systems —
    your web browser isn't the only thing that's running, and may not get a
    chance to run until it's too late to display the next animation frame.
    
    In other HTML animations, this can be worked around — the animation still
    drops frames, but intermediate steps can be computed so that it doesn't
    look excessively jerky.  However, that may not be a realistic option here,
    due to how the feedback process works.
    
    You can minimize frame-dropping by:
    
    *   choosing a relatively small image
    *   finding a sufficiently powerful computer (with sufficiently powerful
        video hardware, especially) to run it on
    *   making sure you have no other programs running, and no other tabs
        open in your browser
    *   letting your browser "warm up" a bit after closing other tabs etc.,
        so that it doesn't have anything pending to clean up after
    *   **not** moving the mouse pointer.
    
    #### Now my desktop is twisting counter-clockwise!
    
    You've just been staring at it too long.
    
    #### Wait, I see _five-fold symmetry_.  Where is that coming from?
    
    To be honest, I really don't know.
    
    ### Background
    
    The idea came about while discussing [[Nam June Paik]], and video art in
    general, with Gareth Jackson.
    
    It was noted by one of us that, before digital video technology, there were
    a number of analogue effects that were employed in video art that aren't
    seen as frequently these days.  A notable one was the use of _feedback_, the
    simplest version being training a camera on a monitor that is displaying
    the feed from that same camera.  More sophisticated applications are
    of course possible; a relatively famous example is the 1970's version of
    the Doctor Who title sequence.
    
    The question arose: could something analogous could be done with digital
    video, and if so, how?
    
    And I came up with this as a simple technique which is similar to video
    feedback and which can be implemented straightforwardly in an HTML5
    canvas element.
    
    The default image used when Canvas Feedback starts up was designed by
    Gareth Jackson specifically to be a pleasing subject for this feedback
    process.

canvas-feedback.js:
  type: Implementation
  license: MIT license
  in-distributions:
  - Canvas Feedback distribution
  host-language: Javascript
  host-platform: HTML5
  implementation-of:
  - Canvas Feedback
  online-locations:
  - installation/Canvas Feedback

Canvas Feedback 1K:
  type: Implementation
  license: MIT license
  # this bit is not true yet
  in-distributions:
  - Canvas Feedback distribution
  host-language: Javascript
  host-platform: HTML5
  implementation-of:
  - Canvas Feedback
  submitted-to:
  - competition: JS1K 2015
    prize: none
  references:
  - url: http://js1k.com/2015-hypetrain/demo/2229
    title: Canvas Feedback 1K
    description: Entry for JS1K, hosted on js1k.com

Canvas Feedback distribution: 
  type: Distribution
  github: catseye/Canvas-Feedback
  tag-style: new
  releases:
  - version: "1.0"
    revision: "0.0"
    url: http://catseye.tc/distfiles/canvas-feedback-1.0.zip
  - version: "1.0"
    revision: "2015.0826"
    url: http://catseye.tc/distfiles/canvas-feedback-1.0-2015.0826.zip


Text Uniquifier:
  type: Gewgaw
  development-stage: mature
  defining-distribution: HTML5 Gewgaws distribution
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  inception-date: Nov 2014
  description: |
    An online tool/amusement where you paste in some text and it displays
    the text with repeated words removed.
  instructions: |
    Copy some text of your choosing (from a web page, a local document, etc.)
    and paste it into the text area in the top half of the page.  Then click
    "Uniquify" and see the uniquified text in the bottom half of the page.
    
    Case-sensitive means that `THIS`, `This`, and `this` are treated as different
    words for uniquification purposes.
    
    Punctuation-sensitive means that `this`, `this?`, `"this"` and `(this` are
    treated as different words for uniquification purposes.
    
    You can also select to retain paragraph breaks only (output will look fairly
    similar to the input text), all line breaks (output tends to resemble
    free verse), or no breaks at all (output is one long unbroken stream of text.)

text-uniquifier.js:
  type: Implementation
  license: Public Domain
  in-distributions:
  - HTML5 Gewgaws distribution
  host-language: Javascript
  host-platform: HTML5
  implementation-of:
  - Text Uniquifier
  online-locations:
  - installation/Text Uniquifier


Lexeduct:
  type: Gewgaw
  development-stage: mature
  defining-distribution: Lexeduct distribution
  authors:
  - Chris Pressey
  auspices:
  - Cat's Eye Technologies
  inception-date: Apr 2015
  description: |
    A "livetextmangler" — an online tool which transforms text.  As you
    select different filters to apply to the input, the output is updated in
    real-time.  Can also be used on the command-line.

lexeduct.js:
  type: Implementation
  license: Public Domain
  in-distributions:
  - Lexeduct distribution
  host-language: Javascript
  # host-platform: Node.js
  implementation-of:
  - Lexeduct
  online-locations:
  - installation/Lexeduct

lexeduct-browser.js:
  type: Implementation
  license: Public Domain
  in-distributions:
  - Lexeduct distribution
  host-language: Javascript
  host-platform: HTML5
  implementation-of:
  - Lexeduct
  references:
  - url: https://catseye.github.io/Lexeduct/in-browser/
    title: Lexeduct installation on catseye.github.io
    description: Try it right now in your browser!

Lexeduct distribution: 
  type: Distribution
  github: catseye/Lexeduct
  tag-style: new
  releases:
  - version: "0.1"
    revision: "0.0"
    url: http://catseye.tc/distfiles/lexeduct-0.1.zip
  - version: "0.1"
    revision: "2016.0315"
    url: http://catseye.tc/distfiles/lexeduct-0.1-2016.0315.zip
  - version: "0.1"
    revision: "2017.0502"
    url: http://catseye.tc/distfiles/lexeduct-0.1-2017.0502.zip
