# encoding: UTF-8
"catseye.tc hosted on new servers":
  type: Article
  article-type: announcement
  publication-date: Tue, 08 Oct 2013 21:09:16 GMT
  blurb: |
    [[catseye.tc]] is now hosted on new web servers.
  description: |
    "Here's a nickel, kid.  Get a real web hosting service."
    
    So I did.
    
    You should see few if any changes.  The ones you might see are:
    
    *   `www.catseye.tc` is no longer an alias for `catseye.tc`, although
        I'll probably set up a redirect in the near future, maybe, if I
        get around to it.
    *   Getting documentation (of esolangs, etc.) onto `catseye.tc` has
        always been a bit of a pain, and that fact hasn't changed, so only
        links to documentation on Github are given here for now.
    *   On the plus side, URLs for Chrysoberyl nodes now look much nicer;
        you can use underscores instead of spaces, kind of like what
        Mediawiki does.  The old URLs will still work too, though.
    *   The new servers are in Europe.  That may affect your latency.
    
    Everything else should be pretty much as it was.  If you see anything
    really broken, feel free to let me know.

"Some HTML5 gewgaws for y'all":
  type: Article
  article-type: announcement
  publication-date: Sun, 04 Aug 2013 03:00:00 GMT
  blurb: |
    Several new [[HTML5]] gewgaws are now online in
    the [[Online Installation|Gallery]].
  description: |
    In [[Programming Languages as an Artistic Medium|a previous article]],
    I mentioned that I consider, not just
    [[Programming Language|programming languages]], but also [[HTML5]],
    an artistic medium.
    
    If short, fluffy, entertaining pieces of music are called
    [bagatelles](http://en.wikipedia.org/wiki/Bagatelle_%28music%29),
    then I propose that short fluffy works in the medium of HTML5 be
    called [gewgaws](http://www.thefreedictionary.com/gewgaw).  Or at
    least, that's what I call them.
            
    And so, here are a few HTML5 gewgaws for your (possible) entertainment.
    Located in the Digital Art Exhibit of our
    [[Online Installation|Gallery]].  In fact there are six new ones in
    total.  And when I say HTML5, I mainly mean the `<canvas>` stuff, of
    course.
    
    They're not esolangs, but if you like esolangs, or if you liked
    [[Cyclobots]], you might like some of the more mathematically-oriented
    ones.

"I'd been meaning to re-implement this for ages":
  type: Article
  article-type: announcement
  publication-date: Fri, 12 Apr 2013 09:26:41 GMT
  blurb: |
    Our 1994 automaton [[Cyclobots]] is now
    [[Cyclobots (HTML5)|live in-browser]] in
    the [[Online Installation|Gallery]].
  description: |
    Turn back the clock.  It's 1994.  NAFTA.  OJ Simpson.  Rwanda.
    And [[SMETANA]], implemented for the first time in [[Visual Basic]].
    
    And, unseen by all but maybe three or four people, [[Cyclobots]].
    
    Also implemented in Visual Basic.  Described as an "interactive
    desktop toy".  Fun to watch.  Languished in obscurity because I
    had other interests at the time.
    
    Then, the Visual Basic programs were forgotten, and eventually [[lost]].
    When Java came on the scene, I had meant to re-implement it as an applet.
    But man, that must have been one *low* priority TODO item, because I
    never got around to it.
    
    [[Cyclobots (HTML5)|Until now]].
    
    'Course, it's not a Java applet now, it's [[Javascript]] on an [[HTML5]]
    canvas, so make sure you're using one of those awesome new
    cutting-edge browsers, i.e., you've updated your Interwebs Explorer
    recently.
    
    If you enjoyed watching what happens when you click "Revolution!" —
    and I mean *really* enjoyed it — feel free to show your appreciation
    by tossing a quarter into
    [this here empty guitar case](https://www.gittip.com/catseye/).

"An Online Parade of Cellular Automata":
  type: Article
  article-type: announcement
  publication-date: Sat, 06 Apr 2013 12:08:26 GMT
  blurb: |
    Our five [[ALPACA]] creations are now online in
    the [[Online Installation|Gallery]].
  description: |
    It's about time!  You can now play with Cat's Eye Technologies'
    cellular automata in your web browser on the following pages:
    [[REDGREEN (HTML5)]], [[Circute (HTML5)]], [[Braktif (HTML5)]],
    [[Jaccia (HTML5)]], and [[Jacciata (HTML5)]].
    
    I've wanted to be able to generate some kind of usable-in-a-web-browser
    code from [[ALPACA]] descriptions for a good long while.  At one point
    I even considered hacking [[alpaca.pl]] to generate [[yoob]] classes
    to do it.  Well, the ALPACA language got a long-deserved update, and
    [[Perl]] gave way to [[Python]] for the new compiler; and yoob in
    [[Java]] has given way to [[yoob.js]] in [[Javascript]].
    
    (In fact, there's nothing much HTML5-specific about these Javascript
    implementations, except for a slider control for adjusting the animation
    speed, which is kind of crude and subject to change anyway.)
    
    The few improvements to yoob.js that were spurred on by this effort to
    get these CA's online have also resulted in improvements to the
    online installations of [[Gemooy (HTML5)]] and
    [[noit o' mnain worb (HTML5)]].

"noit o' mnain worb implemented in HTML5":
  type: Article
  article-type: announcement
  publication-date: Sat, 30 Mar 2013 18:34:22 GMT
  blurb: |
    [[noit o' mnain worb]] has been implemented in
    [[noit o' mnain worb (HTML5)|HTML5]].
  description: |
    The implementation of various things in HTML5 continues.  This
    time it's [[noit o' mnain worb]], which you can play with
    [[noit o' mnain worb (HTML5)|here]].  With pretty graphics,
    for some value of pretty.
    
    Seeing as worb has already been implemented in [[yoob]], why
    do this?  It's not like I can say it's "now playable online", because
    it already was.  (Or if not "playable", then... "play withable"...
    or whatever.)
    
    Well, the security track record for Java applets has been
    rather awful lately.  Certainly, applets aren't going away, but they're
    quickly falling out of fashion.  Updating your browser may,
    reasonably, disable Java.  We may one day, not far off, see the JVM
    stop being shipped with browsers, and available only as an add-on.
    
    And that all means I have to tell you to install and/or enable Java in
    your browser, which defeats the idea of reducing the install burden for
    esolangs, which was one of the original goals of yoob.
    
    The newer [[yoob.js]] framework, which uses [[HTML5]] instead of Java,
    is still pretty messy and ad-hoc, and lacks
    a few things that would be nice to have, like adjustable animation
    speed.  But the more things, like this, that get implemented in it, the
    more it will mature.

"Super Wumpus Land now playable online":
  type: Article
  article-type: announcement
  publication-date: Sun, 24 Mar 2013 12:28:33 GMT
  blurb: |
    [[Super Wumpus Land]] is now [[Super Wumpus Land (HTML5)|playable online]].
  description: |
    [[Super Wumpus Land]], our silly "extended dance mix" version of
    [[Hunt the Wumpus]], has been converted to [[Javascript]], and is now
    playable online here: [[Super Wumpus Land (HTML5)]].
    
    This new implementation uses modules from [[yoob.js]] to simulate
    a text-based terminal on an [[HTML5]] `<canvas>` element.

"Oops, I just turned Chrysoberyl into a blogging platform":
  type: Article
  article-type: announcement
  authors:
  - Chris Pressey
  publication-date: Wed, 20 Mar 2013 14:59:21 GMT
  blurb: |
    Oops, I just turned [[Chrysoberyl]] into a blogging platform.
  description: |
    I'm not much of a blogger.  I've considered starting a blog a few times,
    but the thing is, most blogs are either about trends or opinions
    (or both, combined: _reactions_), and I don't follow trends, and when I
    have opinions, they're about specific *things*.  (Which is why the old
    [[catseye.tc]] had an "About" section, and why [[Chrysoberyl]] lets
    commentary be attached to particular nodes.)  And those opinions, like
    the things themselves, are relatively "evergreen" -- they're not news,
    there's no need to go announcing them.  I also like to be able to
    edit/tweak/update an opinion incrementally after writing it, which also
    fits poorly with the blog model.  [EDIT: see what I mean?]
    
    At the same time, I do generate news, if not trends, and these
    announcements that I've implemented such-and-such or updated
    such-and-such *are* news articles, even if they're short ones.
    
    And sometimes I have something to say that's not focussed on a single
    topic, and it fits best as a stand-alone article, such as 
    [[Retrospective: Chris Pressey on Language Design|my retrospective on esolang design]].
    
    Therefore, I merged the concepts of "News Item" and "Article" into
    just [[Article]] in Chrysoberyl, and all articles get included in
    the Atom feed, whether they're explicitly "news" or not.  The result
    is that Chrysoberyl is, among all the other words that already don't
    describe it, now a blogging platform.
    
    That's not to say you'll be seeing a lot of blog posts in the news feed.
    Even this article, which I consciously tried to write like a blog post,
    is still really mostly an announcement.
    
    But you might see some.  You totally might.  Yeah, you're totally going
    to hear every little nitpick I have about why the latest version of
    Gadget X (resp. Language X) sucks and why GadgetCorp (resp. the Language
    X community) is going totally off-course as a company (resp. open-source
    project).  Because that's so totally the kind of thing I give a crap
    about.

"ALPACA turns 1.0":
  type: Article
  article-type: announcement
  publication-date: Fri, 15 Mar 2013 18:00:00 GMT
  description: |
    We have finally released version 1.0 of [[ALPACA]],
    A Language for the Pithy Articulation of Cellular Automata.
    
    The specification has been rewritten (although _written_ would be
    more accurate) from scratch, and adds some new features to the language,
    such as being able to include an initial configuration in an ALPACA
    description, and handling neighbourhoods other than the Moore
    neighbourhood.
    
    The reference implementation has also been rewritten from scratch,
    in [[Python]] this time.  It can both interpret an ALPACA description,
    and compile it to [[Javascript]].  We plan to use the latter functionality
    to showcase some cellular automata on the website, which incidentally is
    looking a little less dire these days.
    
    The version bump also cures two unpleasantnesses which are pet peeves
    of mine: ALPACA is no longer hanging out at version 0 (which sets it
    apart from, say, `node.js`), and the meaningless version numbers like
    0.94 are now history.  (It's not like it was the ninety-fourth iteration
    of anything.)

"First language release of 2013: Exanoke":
  type: Article
  article-type: announcement
  publication-date: Sat, 05 Jan 2013 11:18:23 GMT
  description: |
    We have released [[Exanoke]], a pure functional
    language which is syntactically restricted to expressing the primitive
    recursive functions.
    
    If this doesn't sound like a stellar achievement, it's probably because
    it's not one.  But, I was previously aware of only how an imperative
    language could be restricted to primitive recursion (i.e. have only `for`
    loops) and previously did some work on analyzing functions in a
    pure functional language to determine if they are primitive recursive
    or not; in a way, Exanoke combines both of those ideas.

"Chrysoberyl is now in BETA":
  type: Article
  article-type: announcement
  publication-date: Fri, 04 Jan 2013 14:17:00 GMT
  description: |
    Happy 2013!  [[Chrysoberyl]] is now in beta, whatever
    that means in this day and age where it's not considered absurd for
    web services to be in perpetual beta.
    
    Well, concretely, what it means is we've replaced the older parts of
    `[[catseye.tc]]` entirely with Chrysoberyl entries, with a lot of web
    redirects so all those links out in the wild still work.
    
    What it doesn't mean is that Chrysoberyl is finished in any sense.
    Its content will of course continue to evolve, and it will likely be a
    while before we are entirely happy with its structure and styling (so
    expect these to change in the near future.)

"Language, Language, Implementation, Bug fix, Bug fix":
  type: Article
  article-type: announcement
  publication-date: Mon, 17 Sep 2012 22:13:56 GMT
  description: |
    So yeah, let's catch up with all the exciting, exciting
    *non*-Chrysoberyl-related developments we've seen here in the past few days!
    
    First, please welcome our latest newcomer to the menagerie,
    [[Jolverine]].  I haven't been able to write a loop in it yet, but
    <a class="external" href="http://esolangs.org/wiki/Talk:Jolverine">Ørjan
    is figuring that part out</a>.
    
    Second, I remembered why I designed [[Etcha]] — it was part of a
    larger, stranger, maze-based automaton called [[Zame]].  Which is now
    described on the esowiki.
    
    Third, I finally got around to implementing [[Thue]].  In [[Ruby]].
    I've been maintaining a distribution of it for so long without contributing
    to it, I felt it was overdue.  And now there is a new release of the
    [[Thue distribution]].
    
    Fourth, Keymaker reported a bug with in [[smith.pl]] — and while fixing
    it, I found another fixed that one too, and there has been another release
    of the [[SMITH distribution]].
    
    Lastly, while implementing a truth-machine in [[Ypsilax]] I found a bug
    in [[ypsilax.pl]] too (turns out, in [[Perl]], the *string* `'0'` is false-y.
    It's things like that why I don't code in Perl much anymore.)  So there's
    a new release of the [[Ypsilax distribution]] too.

"Dungeons of Ekileugor: 3,221 bytes of roguelike":
  type: Article
  article-type: announcement
  publication-date: Sun, 16 Sep 2012 05:04:44 GMT
  description: |
    Have you ever wondered how much roguelike can
    be crammed into the 3583 bytes available to BASIC on an unexpanded
    [[Commodore VIC-20]]?  Well wonder no more, for [[Dungeons of Ekileugor]]
    is such a cramming.  Random dungeon level generation with
    fairly reasonable layout of rooms and tunnels, monsters, combat with
    hit points and experience points, queued messages, treasure, chests,
    traps, potions — it's quite a respectable set of "dungeon furniture"
    considering the platform, we think.  Fire up your emulator (or, bless
    you, a real VIC-20) and try it out!

"Chrysoberyl is now in ALPHA":
  type: Article
  article-type: announcement
  publication-date: Sun, 16 Sep 2012 01:44:35 GMT
  news-link: http://catseye.tc/node/Chrysoberyl.html
  description: |
    Remember "The Great DVCS Exodus"
    (May 20, 2012)?  (Well, if you don't, scroll down.)
    I am happy to say that it is, for all intents and purposes,
    complete: essentially all of our stuff is now in repositories on
    <a class="external" href="https://bitbucket.org/catseye">Bitbucket</a>
    and
    <a class="external" href="https://github.com/catseye">GitHub</a>.
    
    And remember how I said that the role of catseye.tc might
    change in light of this, but that I wasn't sure how?  Well, here's
    the deal.  We have put together a database of sorts of all the
    things Cat's Eye Technologies has produced, and many of the
    things directly related to the things Cat's Eye Technologies has
    produced, and how they all relate, called _Chrysoberyl_.
    
    I like to think of it as a sort of cross between a wiki and a semantic web
    and _The Devil's Dictionary_.
    It teases apart the relationships between programming languages
    (and other intangibles), implementations (things you can
    run), and distributions (things you can download), and casts it all in
    a bunch of YAML files with embedded Markdown.
    From these, a set of HTML5 pages can be generated, and lo and behold,
    [[Chrysoberyl|these are now on the site]].
    
    They are, however, still in a very early stage of development.  Expect
    the styling to change, the content to change, the structure to change,
    links to break, and the usual sort of thing.
    
    This has a few implications for the rest of the site.  The Gallery Space will
    stay more-or-less as it is for a while, but the Projects Space
    and the "About" documents will eventually go away, and will redirect into
    Chrysoberyl instead.  In the meantime, they will likely *not* be
    updated to reflect the latest developments.  Look at Chrysoberyl, or our repositories
    on Bitbucket and Github, instead, if you want to follow those.
    
    And, more importantly for you (if you are reading this from our RSS feed)
    is that our RSS feed *will no longer be updated*.  This will probably
    be the last item in it, except for an "Are you still reading this?" item when we've switched
    entirely over to Chrysoberyl.  Instead, you will want to subscribe to
    <a href="http://catseye.tc/feeds/atom_15_news.xml">our new Atom feed for
    news, generated from Chrysoberyl</a>.

"Cfluviurrh: an Esolang with Feeling (Literally)":
  type: Article
  article-type: announcement
  publication-date: Sun, 26 Aug 2012 17:43:52 GMT
  news-link: http://catseye.tc/projects/cfluviurrh/
  description: |
    We have released a new programming language.
    It's called Cfluviurrh.  It was designed for writing programs that
    can *feel*.  That is, defines a mechanism by which
    a program can be instructed to experience particular emotions.
    You might, thus, on first blush, consider Cfluviurrh to be
    unimplementable, as modern-day computers are not capable of
    experiencing emotions (you guess.)  However, this is demonstrably
    untrue, and the Cfluviurrh reference interpreter demonstrates it.
    
"The NEW Befunge-93 Reference Distribution":
  type: Article
  article-type: announcement
  publication-date: Sat, 25 Aug 2012 17:58:39 GMT
  news-link: http://catseye.tc/projects/befunge-93/
  description: |
    Since `bef`
    is the reference implementation of Befunge-93, or at least I've
    been calling it that, and since we've decided more or less
    that packaging all reference materials for a language into a
    "reference distribution" is the way to go, the bef and befunge93
    distributions have been merged into a single, NEW distribution
    called "befunge-93".  Also included are a couple of new example
    programs, a Makefile, and a small feature fix to the debugger.  Enjoy!
    
"One More Language: Hello, Velo":
  type: Article
  article-type: announcement
  publication-date: Sat, 14 Jul 2012 20:58:15 GMT
  news-link: http://catseye.tc/projects/velo/
  description: |
    And when we do get rid of a language, we like
    to introduce another language to keep our numbers up.  Enter
    Velo, a vaguely Ruby-inspired scripting language which unifies
    strings with code blocks, and scripts with object classes.
    It's by no means final or complete, but enough of it is there that
    it feels like it's been "invented", so here it is — expect it to
    change in minor (but backwards-incompatible) ways in the
    future, though.
    
"One Less Language: Farewell 2iota":
  type: Article
  article-type: announcement
  publication-date: Sat, 14 Jul 2012 18:36:52 GMT
  news-link: http://catseye.tc/projects/beta-juliet/
  description: |
    It's not often we get rid of a language here at
    Cat's Eye Technologies, but it happens occasionally.  In fact,
    it happened today.  I decided, some time back, that the languages
    beta-Juliet and 2iota were simply too similar to be distinct
    languages; and so, 2iota was absorbed into β-Juliet version 2.0
    (which we can spell with the Greek letter now that everybody's
    got their Unicode boots on, right?)  The semantics of the language
    have also been clarified somewhat (although the reference
    interpreter still needs to catch up to them in some small ways.)
    
"yucca: Static Analysis for BASIC":
  type: Article
  article-type: announcement
  publication-date: Mon, 11 Jun 2012 04:13:52 GMT
  news-link: http://catseye.tc/projects/yucca/
  description: |
    We have officially released version 1.0 of
    `yucca`, a static analyzer for 8-bit
    BASIC programs.  `yucca` can find those
    places in your program where you jump to a line number that
    doesn't exist, and a modest assortment of other things.  It
    graciously ignores statements that it doesn't know anything
    about, allowing it to be dialect-agnostic.  It has been used
    on our BASIC offerings (all two of them) and did, indeed, find
    [a useless jump in Apple Befunge](https://github.com/catseye/Apple-Befunge/commit/ba4319011ccbac2041f0a6a9ec5cadae91483906).
    
"Bubble Escape now open-source":
  type: Article
  article-type: announcement
  publication-date: Sun, 03 Jun 2012 16:46:56 GMT
  news-link: http://catseye.tc/projects/bubble-escape/
  description: |
    A new revision of the Bubble Escape distribution has been
    released.  It contains all three versions of Bubble Escape: the 2009
    Mini Game Competition winner (2K), an 8K cartridge image based on that
    source, and the original version, written in BASIC, from the 80's.  What's
    more, the source code for all versions is now included, and placed under
    a BSD license.
    
"The Great DVCS Exodus":
  type: Article
  article-type: announcement
  publication-date: Sun, 20 May 2012 21:41:02 GMT
  news-link: https://github.com/catseye/
  description: |
    Did you know that the catseye.tc website is statically
    generated with a set of XSLT templates?  Well, it's true.
    This has certain advantages — like, when was the last time you
    saw broken XHTML on one of the project pages?  But it has
    disadvantages, too.  Namely, it's becoming a pain to update.
    
    Meanwhile, we've been putting more and more of our
    projects under distributed version control.  We tend to use
    [Mercurial](http://mercurial.selenic.com/) but
    [hg-git](http://mercurial.selenic.com/wiki/HgGit)
    provides a fairly seamless bridge to [git](http://git-scm.com/)
    repositories, too.  And then there's these sites that host such repositories
    for you, [Bitbucket](https://bitbucket.org/)
    and [Github](https://github.com/) (among others).
    
    So, we've been neglecting catseye.tc a bit lately, and have been
    putting our projects onto Bitbucket
    and GitHub, and making updates to them there.  There are certain advantages
    to doing so.  For example, if you find a bug in one of our implementations,
    you can fork that project, fix the bug, and even if Chris doesn't respond to your
    pull request for three or four years, at least your fork will be out there and
    available to anyone
    else who might be interested.  On top of that, the source browsers on both
    of these sites are better than anything we have the time to invest in putting on
    this site.  (Besides, if we go the way of \_why, chances are some of
    our projects will end up there anyway, so why not give them a head start?)
    
    But no, this does not mean the end of catseye.tc.  I mean, we have
    to keep it, or all our Java package hierarchies will be busted, right?  And I think
    people are peeved enough over all the old links that are still around that lead
    to all the old domain names Cat's Eye Technologies has used in the past — no
    sense putting another one on that heap, if we can help it.  But the role of
    catseye.tc might change somewhat.  I don't know yet.  We'll see.
    
    Anyway, the point is: keep watching this space, but if you want
    breaking updates on what kind of crazy crap we're working on
    *this minute*, check out
    [Cat's Eye Technologies on Bitbucket](https://bitbucket.org/catseye)
    and/or
    [Cat's Eye Technologies on Github](https://github.com/catseye).

"Some Facts Regarding Apple Befunge v1.1":
  type: Article
  article-type: announcement
  publication-date: Mon, 20 Feb 2012 17:44:01 GMT
  news-link: http://catseye.tc/projects/apple-befunge/
  description: |
    Pixley and Falderal.  Falderal and Pixley.
    I know, I know, it's all you've been hearing about for the past
    three months, you poor thing.  But now, O eso-pilgrim, well
    may you frolic and jubilate!  I bring news of something closer to
    the weird.  After more than a decade, some well-deserved
    updates have been made to Apple Befunge, that ol' "retrolanguage"
    for the Apple ][+, and it has been placed in the public domain.
    
"I got Pixley power!":
  type: Article
  article-type: announcement
  publication-date: Mon, 20 Feb 2012 01:12:15 GMT
  news-link: http://catseye.tc/projects/pixley/
  description: |
    Pixley version 2.0 revision 2012.0219 has been released.
    There are no changes to the language, but there are a few significant
    improvements to the supporting tools and tests, and a few to the
    implementation, and a bevy of minor dialects of Pixley have been defined
    for purposes of Scheme-ly tar-pit research.  Oh, and it's been officially
    placed under a BSD-style license now.  Enjoy...
    
'Release of Falderal version 0.6 "Streeterville"':
  type: Article
  article-type: announcement
  publication-date: Mon, 02 Jan 2012 14:45:16 GMT
  news-link: http://catseye.tc/projects/falderal/
  description: |
    The new year sees another release of
    Falderal, our framework for writing literate test suites for
    languages.  This version supports variable expansion in
    functionality specifiers and the ability to add and remove
    functionality specifiers on the command line.  It also fixes
    several bugs and shortcomings in the previous version.
    And, if you browse around the site a bit, you'll see
    we've started using it to format our projects' Falderal,
    Markdown, and Literate Haskell documents to XHTML.
    
'Release of Falderal version 0.5 "The Loop"':
  type: Article
  article-type: announcement
  publication-date: Wed, 14 Dec 2011 14:40:19 GMT
  news-link: http://catseye.tc/projects/falderal/
  description: |
    Falderal, our format for unit-testing little
    languages, has seen release of version 0.5 "The Loop".
    As you can see, we have adopted a naming convention for
    release milestones — they're named after Chicagoland
    neigbourhoods, suburbs, landmarks, and institutions.
    This version was named after The Loop in recognition of its
    ability to shuttle test results between `falderal`
    and the various results generators implemented in different languages
    (Haskell, Bourne shell scripts) and to report on all the failures in
    a consistent way.
    
"Release of Pixley version 2.0":
  type: Article
  article-type: announcement
  publication-date: Fri, 09 Dec 2011 17:18:14 GMT
  news-link: http://catseye.tc/projects/pixley/
  description: |
    Pixley version 2.0 has been released.  It
    removes `cadr` and `null?`
    from the language.  Partly because of this, the reference interpreter is
    now somewhat simpler: 124 lines of Pixley, with 407 instances of 53
    unique symbols in 672 cons cells.  The distribution now also includes
    driver shell scripts, Falderal tests, and a P-Normalizer, probably the
    first non-trivial Pixley program to be written outside the Pixley interpreter
    itself.
    
"Madison, a Term-Rewriting Proof-Checker":
  type: Article
  article-type: announcement
  publication-date: Fri, 02 Dec 2011 20:26:43 GMT
  news-link: http://catseye.tc/projects/madison/
  description: |
    One thing I've wanted to do for a long while is
    design a language in which one can state proofs of the properties
    of programs in that language.  Not a full-blown theorem prover, just
    a proof checker, where you have to supply the proof, and the
    system tells you if it holds or doesn't hold.  And not an immensely
    powerful proof-checker either, just powerful enough to state some
    simple proofs which hold over an infinite universe of values.
    
    Well, after much thought and sketching, I have come up with
    a term-rewriting-based proof-checking language called Madison.  It
    supports both direct proof and proof by structural induction, and I
    have used it to write a proof that the reflection of the reflection
    of any binary tree is the same as the original tree.  It's not much,
    but I'm quite pleased with it.
    
"Q: Are We Not Men?  A: We Are Flobnar!":
  type: Article
  article-type: announcement
  publication-date: Fri, 28 Oct 2011 14:34:04 GMT
  news-link: http://catseye.tc/projects/flobnar/
  description: |
    One day in September of 2011 — though I'm not
    sure precisely which one — marked Befunge-93's 18th birthday.
    That means that Befunge is now old enough to drink in its native
    land of Canada.  To celebrate this, I thought I'd get Befunge-93 drunk
    to see what would happen.
    
    What happened was Flobnar, an esolang which is in many respects a
    functional dual of Befunge-93; most of the symbols have analogous
    meanings, but execution proceeds in a much more dataflow-like fashion.
    
"Release of Falderal version 0.4":
  type: Article
  article-type: announcement
  publication-date: Mon, 10 Oct 2011 20:47:03 GMT
  news-link: http://catseye.tc/projects/falderal/
  description: |
    Well, that was quick — well,
    we were on a roll.  Falderal 0.4 introduces several
    desirable features.
    `Test.Falderal` is a Cabal package now, making
    installation easier, and this Cabal package installs
    a tool (unflinchingly called `falderal`)
    which drives the formatting and testing processes.
    Tests are now targetted at abstractions called
    _functionalities_, and
    functionalities are allowed to be implemented in different ways,
    including as shell commands, supporting the testing of multiple
    implementations of a function in multiple, essentially arbitrary
    implementation languages.  This all brings Falderal closer to
    its goal of being a testing framework for programming languages.
    
"Release of Falderal version 0.3":
  type: Article
  article-type: announcement
  publication-date: Fri, 07 Oct 2011 18:30:56 GMT
  news-link: http://catseye.tc/projects/falderal/
  description: |
    Remember that major change in
    how Falderal works that we talked about when
    Falderal 0.2 was released?  Well, it's here, in
    Falderal 0.3.  Basically, two things happened.
    One, Falderal is a file format now, and
    `Test.Falderal`
    is the reference implementation,
    in Haskell, for tools which claim to understand the
    format.  Two, `Test.Falderal`
    is now able to format Falderal files into other formats.
    In fact, running tests is accomplished by formatting
    the Falderal file into Haskell code, and running that.
    
"OMG WTF FBBI 1.0 SIAS EVVK!":
  type: Article
  article-type: announcement
  publication-date: Mon, 03 Oct 2011 20:46:30 GMT
  news-link: http://catseye.tc/projects/fbbi
  description: |
    After years and years of apathy, we have
    fixed a number of bugs in the Flaming Bovine Befunge-98 Interpreter
    (FBBI), raising its quality level from "profound embarrassment" all the
    way to "marginal non-fail".  Mainly we did this by randomly applying
    those patches that have been floating around, for which we owe much
    gratitude, but there was also a crippling memory-management bug that
    we found in the stack routines that highly deserved
    being killed, so, we sure did that thing too.
    
    To celebrate — and to assuage our acquired annoyance at
    version numbers which look like decimal numbers that are supposed
    to indicate "close to release" — we have released version 1.0 of FBBI.
    
    Note well that our general apathy towards Funge-98
    has not abated in kind.
    
"yoob 0.3 in the Gallery of Interactive Esolangs":
  type: Article
  article-type: announcement
  publication-date: Wed, 21 Sep 2011 18:46:23 GMT
  news-link: http://catseye.tc/gallery/esolangs/
  description: |
    yoob 0.3 has been released, and it has moved out
    of Cat's Eye Technologies' lab and has become an official part of our
    website.  It is now the main exhibit in the new Gallery of
    Interactive Esolangs.  And, since we have three galleries now, we have
    developed this section of the website into something more real: our
    [Gallery Space](http://catseye.tc/gallery/).
    This is where we will be exhibiting interactive works, and works
    not produced by Cat's Eye Technologies but which we find interesting
    nonetheless.
    
"Have you seen LoUIE lately?":
  type: Article
  article-type: announcement
  publication-date: Sat, 17 Sep 2011 21:24:45 GMT
  news-link: http://catseye.tc/cpressey/louie.html
  description: |
    Have you seen LoUIE (our List of Unfinished
    Interesting Esolangs) lately? Because if you haven't, there's likely
    some designs there you haven't seen, because I just now added
    three (and in the past, haven't always announced it when I've
    added new entries.)  There are twelve in total now, so if you're
    looking for an idea to build on, why not give it a look-see?
    
'Researchers Discover the Civilization Advance "Language: Xoomonk"':
  type: Article
  article-type: announcement
  publication-date: Sun, 07 Aug 2011 23:56:59 GMT
  news-link: http://catseye.tc/projects/xoomonk/
  description: |
    Xoomonk is a programming language in which
    _malingering updatable stores_
    are first-class objects.  Malingering updatable stores unify several language
    constructs, including procedure activations, named parameters, and object-like
    data structures.  While the language is not yet implemented or even
    entirely finalized, it is pretty much complete, so is being released as
    version 0.1.
    
"PL-{GOTO}.NET: Eat it Before it Eats You":
  type: Article
  article-type: announcement
  publication-date: Fri, 05 Aug 2011 02:53:30 GMT
  news-link: http://catseye.tc/projects/pl-goto.net/
  description: |
    You've always wanted an compiler
    for the example primitive recursive language PL-{GOTO}
    from Brainerd and Landweber's _Theory of Computation_,
    haven't you?  And you have a need for it to generate MSIL which
    can be fed into `ilasm`to produce a .NET
    executable, don't you?  And you wouldn't be satisfied unless it were
    implemented in Haskell, with a true-to-form grammar parsed with a
    Parsec combinator parser, would you?
    
    ...
    
    Why aren't you answering me???
    
"Bubble Escape 2K Now Playable Online":
  type: Article
  article-type: announcement
  publication-date: Sat, 16 Jul 2011 05:34:50 GMT
  news-link: http://catseye.tc/gallery/c64/bubble-escape-2k/
  description: |
    As subject.  We've wanted to do this for a
    while, but last time an attempt was made,
    [JaC64](http://jac64.sourceforge.net/)
    was not quite up to the task.  So we
    [forked it on Bitbucket](https://bitbucket.org/catseye/jac64/)
    and for the past few weeks we've been busy fixing bugs in it.
    It's still not perfect, but it's playable on several
    platforms including Windows (Firefox and IE)
    and Ubuntu 11 (Firefox).  So try it!  Enjoy!
    
"Release of Falderal version 0.2":
  type: Article
  article-type: announcement
  publication-date: Mon, 27 Jun 2011 18:40:47 GMT
  news-link: http://catseye.tc/projects/falderal/
  description: |
    Mainly to get a few minor niceties
    and bugfixes out of the way before we start on
    major changes to how Falderal works, Falderal 0.2
    has been released.  The planned major changes are
    probably more interesting than the niceties: I hope
    to make Falderal into something that can test more
    than just Haskell functions.  Of course, it will still
    be written in Haskell.
    
"First public release of yoob source code":
  type: Article
  article-type: announcement
  publication-date: Fri, 24 Jun 2011 04:27:27 GMT
  news-link: http://catseye.tc/projects/yoob/
  description: |
    yoob has pulled itself out of its
    "technology preview" stage, and is officially released
    as open-source software.  More specifically, its source
    code is in the public domain and its development is
    hosted on a
    [public repository](https://bitbucket.org/catseye/yoob)
    on Bitbucket.  Even though the source code is
    embarrasingly bad, I decided not to care.  If you decide
    to care, you are quite free to hack it into better shape --
    there are more than a dozen open issues in its
    [issue tracker](https://bitbucket.org/catseye/yoob/issues).
    
"Corona: Realm of Magic: Dug out of the Attic":
  type: Article
  article-type: announcement
  publication-date: Fri, 24 Jun 2011 00:17:55 GMT
  news-link: http://catseye.tc/projects/corona-realm-of-magic/
  description: |
    Something else I dug out of the attic.  This was
    an elaborate roguelike I wrote (but never finished) in Perl,
    circa 2000. Still runs on a modern Perl (v5.10.1), but doesn't
    play too nicely with my modern terminal emulator. No further
    development is planned — it is retained here for historical
    interest only.  It's actually been on the site for a while, but
    due to some technical problems, was not announced until now.
    
"Apple Befunge: Dug out of the Attic":
  type: Article
  article-type: announcement
  publication-date: Tue, 07 Jun 2011 19:47:35 GMT
  news-link: http://catseye.tc/projects/apple-befunge/
  description: |
    Hey, look what I dug out of the attic.  I don't even
    remember what emulator the disk image was built for.  Oh well.
    
"Pail is an acceptable Bizaaro[sic]-Pixley":
  type: Article
  article-type: announcement
  publication-date: Fri, 27 May 2011 14:33:34 GMT
  news-link: http://catseye.tc/projects/pail/
  description: |
    If you've been following our news,
    you've noticed that twenty-eleven's been kind of a
    light year for new languages here at Cat's Eye Technologies.
    It's been mostly updates, with the only original design
    being Wunnel.  Well, that pattern's been broke!
    We have another new language.  It started its life
    under the name Bizaaro[sic]-[[Pixley]],
    but it's called Pail now (for PAIr Language).
    
"Falderal: Literate Testing for Haskell Functions":
  type: Article
  article-type: announcement
  publication-date: Tue, 17 May 2011 23:43:10 GMT
  news-link: http://catseye.tc/projects/falderal/
  description: |
    We here at Cat's Eye Technologies
    have decided to stop building new ad-hoc test suite
    machinery for every new esolang we implement in
    Haskell.  Instead, we have put together a package
    that can be used and reused for this purpose, and
    we have (for reasons obscure even to us) called it
    Falderal.  It doesn't do a lot yet (it's only version 0.1...), but it has promise.
    We're already using it in [[Quylthulg]].
    To encourage contributions, its development is hosted on a
    [public repository on Bitbucket](https://bitbucket.org/catseye/falderal).
    Watch for its use in future projects!
    
"Pluggin' some (specification) leaks in Eightebed":
  type: Article
  article-type: announcement
  publication-date: Tue, 10 May 2011 18:59:22 GMT
  news-link: http://catseye.tc/projects/eightebed/
  description: |
    Eightebed version 1.1.  Has a nice ring to
    it, doesn't it?  Kind of mellow, with hints of
    strawberry and creosote on the back of the tongue.
    And that ring is even nicer when you
    realize that this update fixes the definition of the language to
    make it fulfill its original purpose.  The concept of
    the _safe area_ has been limited
    to statements in a block before the first `free`
    statement, thus preventing the creation of aliased
    dangling references.  Thanks to Gregor Richards for
    pointing out this hole.  Also included: a handful of bug
    and documentation of fixes that you don't care about.
    
"Oozlybub and Murphy and Progress!":
  type: Article
  article-type: announcement
  publication-date: Wed, 27 Apr 2011 19:37:55 GMT
  news-link: http://catseye.tc/projects/oozlybub-and-murphy/
  description: |
    Version 1.1 of the Oozlybub and Murphy
    programming language has been released.  This update
    tries to clarify some of the errors in the specification while
    also slathering some extra goo onto it like a wimpmode.
    Enjoy, then enjoy again, then PLEASE DO KEEP ENJOYING
    UNTIL YOUR EYES BURN WITH DEEP DEEP CORROSION.
    
"More blowing off of dust: Maentwrog":
  type: Article
  article-type: announcement
  publication-date: Tue, 26 Apr 2011 18:00:57 GMT
  news-link: http://catseye.tc/projects/maentw/
  description: |
    Marinus has been so kind to write
    documentation and example programs for the
    ancient and venerable Maentwrog language that
    I decided I ought to update the distribution to
    include them — along with a small fix that allows the
    source to be build with modern C compilers like
    gcc and pcc.
    
"yoob Grows Support for 3 More Esolangs":
  type: Article
  article-type: announcement
  publication-date: Wed, 30 Mar 2011 23:37:49 GMT
  news-link: http://catseye.tc/lab/yoob/applet.html
  description: |
    The yoob framework for esolang
    implementations has seen many minor improvements,
    and has had three more esolangs implemented for it.
    Two of these, Befunge-93 and brainfuck, are languages
    that no mega-eso-interpreter should be without; the
    third is Ypsilax, which was implemented in a relatively
    efficient manner (far more so than the existing implementation)
    to vet yoob's pattern-matching support.
    
    None of these esolang implementations is
    particularly refined; each has some shortcomings w.r.t.
    the framework, and probably some bugs too.  I expect
    they'll ripen with age.  Enjoy...
    
"Blowing the Dust off bef":
  type: Article
  article-type: announcement
  publication-date: Sat, 19 Mar 2011 05:49:00 GMT
  news-link: http://catseye.tc/projects/bef/
  description: |
    The Befunge-93 reference interpreter,
    after a long period of inactivity, has been updated to
    version 2.22.  This fixes three bugs, shortcomings,
    features, call them what you will: EOF characters are
    no longer written into the playfield when loading an
    otherwise blank source file (thanks to whoever sent
    me that patch six-odd years ago, and sorry that I have
    no recollection who you are); long source file lines
    are truncated instead of wrapping around to the next
    playfield line (this lets bef load mycology.b98 correctly);
    and the # instruction now behaves consistently when
    combined with wrapping (i.e. when it occurs at the
    very edge of the playfield.)  All this and some minor
    aesthetic improvements to the interpreter, too!
    
"Technology preview: yoob":
  type: Article
  article-type: announcement
  publication-date: Tue, 15 Mar 2011 17:48:27 GMT
  news-link: http://catseye.tc/lab/yoob/applet.html
  description: |
    Cat's Eye Technologies has embarked
    on an ambitious project: build a framework which both
    reduces the effort to implement esolangs, and makes
    those implementations easily accessible to, and usable
    by, anyone with a modern web browser — even
    non-programmers.
    
    The project is called yoob.  Even though it
    is still in an early stage of development, already
    more than ten esolangs have been implemented in it.
    And you can certainly expect more in the future.
    Enjoy...
    
"We Three Things of Disorient Are":
  type: Article
  article-type: announcement
  publication-date: Tue, 04 Jan 2011 14:23:23 GMT
  news-link: http://catseye.tc/cpressey/lingography.html#Gemooy
  description: |
    Alright, so it's a little late, I admit, but
    puns of that quality take time!  We present three
    remotely fungeoid little esolangs
    that, in fact, *were* designed before Christmas:
    [[Gemooy]], [[Nhohnhehr]], and [[Kelxquoia]].
    They're not in our project space yet, but they are on the
    esolang wiki, and one of them (Nhohnhehr) has an
    implementation already, thanks to Marinus.
    
    So, take a gander at 'em, and you'll be saying,
    "Hey Chris, where'd you get your programming language
    designer's license?  A cereal box?"
    
    Actually, that'd be a pretty cool breakfast cereal,
    to have a prize like that...
    
"Refurbishment of Thue Implementations":
  type: Article
  article-type: announcement
  publication-date: Sat, 18 Dec 2010 21:33:39 GMT
  news-link: http://catseye.tc/projects/thue/
  description: |
    We've released a couple of bugfixes
    and some general modernization to the implementations
    of the Thue language included in our Thue distribution.
    Thanks to Nathan Thern for the bug report that spurred
    on this effort!
    
"Fresh, Bold Stupid: Oozlybub and Murphy":
  type: Article
  article-type: announcement
  publication-date: Wed, 01 Dec 2010 04:02:32 GMT
  news-link: http://catseye.tc/projects/oozlybub-and-murphy/
  description: |
    Cat's Eye Technologies has
    developed a new programming language. The name of this
    language is Oozlybub and Murphy. Despite appearances,
    this name refers to a single language. The majority of the
    language is named Oozlybub. The fact that the language
    is not entirely named Oozlybub is named Murphy. Deal with it.
    
"Pixley Version One Point One":
  type: Article
  article-type: announcement
  publication-date: Fri, 05 Nov 2010 21:11:25 GMT
  news-link: http://catseye.tc/projects/pixley/
  description: |
    An update to the Pixley programming
    language has been made, version 1.1, which fixes a problem
    where the reference implementation (and thus, for better or
    worse, the language definition) was not preserving
    the disjointedness of types.  A lot of goodies have also been
    added to the distribution, including a more complete test
    suite, a REPL, a statistics generator, and an implementation
    in Mini-Scheme.
    
"A Programming Language called Eightebed":
  type: Article
  article-type: announcement
  publication-date: Wed, 01 Sep 2010 22:56:25 GMT
  news-link: http://catseye.tc/projects/eightebed/
  description: |
    I could have just explained to Gregor
    why he was mistaken, but _noooo_,
    I had to go and design an entire _language_
    to make my point.  And I had to go and name it
    "Eightebed", too!
    
"Whothm, a Language for Infinite Drawings":
  type: Article
  article-type: announcement
  publication-date: Tue, 29 Jun 2010 22:44:31 GMT
  news-link: http://catseye.tc/projects/whothm/
  description: |
    We present Whothm, a simple language for
    describing infinite two-colour bitmaps.  You can try it out
    in your web browser with JWhothm, an implementation of
    Whothm in a Java applet.
    
"Burro Climbs to 2.0":
  type: Article
  article-type: announcement
  publication-date: Mon, 07 Jun 2010 19:13:58 GMT
  news-link: http://catseye.tc/projects/burro/
  description: |
    A major overhaul was done to the Burro language,
    resulting in version 2.0.  Whatever Burro 1.0 might have achieved,
    it _wasn't_ its primary goal.  As Alex Smith was
    kind enough to point out, the set of Burro 1.0 programs don't
    actually form a group.
    
    Burro 2.0 fixes the design of the language to avoid the
    problem.  It is defined as an executable semantics written in
    Literate Haskell/Markdown which includes both a proof that Burro
    2.0 programs form a group, and a demonstration of how one can
    map a Turing machine to a Burro program.
    
"A video game: Bubble Escape 2K":
  type: Article
  article-type: announcement
  publication-date: Wed, 12 May 2010 03:03:58 GMT
  news-link: http://catseye.tc/projects/bescape2k/
  description: |
    Wow!  A tiny C64 video game from the deep past!
    Actually, this was released almost a year ago, when it
    was submitted to the Mini Game Competition 2009,
    where it won first prize in its class.  I decided to host it
    here given the undecided nature of the future of the
    minigamecomp.org.uk site.
    
    We humbly think you should get out your Commodore 64 emulator and play it!
    
"Gallery of Esteemed Programming Languages":
  type: Article
  article-type: announcement
  publication-date: Fri, 30 Apr 2010 20:13:55 GMT
  news-link: http://catseye.tc/gallery/languages/
  description: |
    At Cat's Eye Technologies, we have long
    beheld a few programming languages as exceptionally worth
    persual and appreciation, despite the fact that they have no
    implementations, are not under active development, and were
    not designed by Chris Pressey (or at least, you can't prove it.)
    We have, until recently, hosted these in our projects space.
    However, because of the criteria listed in the first sentence,
    we decided that these aren't really "projects" in any good sense,
    and we resolved to establish a distinguished display case for
    these beauties on this website.
    
    And here it is – the Gallery of Esteemed Programming Languages.
    
    The past few days have also seen a flurry of extremely
    minor updates to many of our projects, mostly to fix small
    conformancy issues, such as making the documentation validate
    as XHTML 1.0 Strict.
    
"Another blast from the past: RUBE":
  type: Article
  article-type: announcement
  publication-date: Thu, 04 Feb 2010 16:26:47 GMT
  news-link: http://catseye.tc/projects/rube/
  description: |
    In a move likely to set a dangerous
    precedent for retrotechnology maintenance,
    Cat's Eye Technologies today released a
    new version of the RUBE programming language,
    the first such update in over twelve years.
    "Actually 1.3 is exactly the same language as 1.02,
    but I couldn't stand that meaningless zero anymore,"
    Chris Pressey, a spokesman for the company, stated
    at a fictional news conference.  "At least I finally got around
    to getting the implementation to compile under something
    besides Borland C++."
    
    None of Mr. Pressey's livestock were available
    for comment.
    
"ZOWIE: Memory-Mapped Structured Flow Control":
  type: Article
  article-type: announcement
  publication-date: Tue, 29 Dec 2009 21:14:00 GMT
  news-link: http://catseye.tc/projects/zowie/
  description: |
    Cat's Eye Technologies' last language of the aughts,
    ZOWIE, goes to press.  ZOWIE is a machine-like language, somewhat
    echoing SMITH in syntax, where flow control is both structured (as in
    structured programming) and memory-mapped (as in you write to memory
    to indicate the start, and the end, of each loop.)
    
    Also, I can now say I've worked on a language project for every
    letter of the Roman alphabet.  I'm so happy.
    
"Release of Etcha, a Turtle-Based Language":
  type: Article
  article-type: announcement
  publication-date: Sun, 04 Oct 2009 17:57:05 GMT
  news-link: http://catseye.tc/projects/etcha/
  description: |
    We present the esolang Etcha, a four-instruction BitChanger
    descendant with a two-dimensional storage model based on turtle graphics.  Unlike the
    turtle in LOGO however, the turtle in Etcha is an integral part of the
    computation, playing a role similar to the tape head of a Turing machine.
    
"Dieter: Type Qualifiers meet Modules":
  type: Article
  article-type: announcement
  publication-date: Sun, 04 Oct 2009 01:00:31 GMT
  news-link: http://catseye.tc/projects/dieter/
  description: |
    After a long long time incubating, the Dieter
    programming language is released.  Dieter (that's Dieter as in the
    German masculine given name Dieter, not dieter as in "one who diets")
    conflates _type qualifiers_ with _modules_.
    The article describes how the interaction between these two features
    produces something that resembles object-oriented programming.
    
"The Pixley Programming Language Arrives":
  type: Article
  article-type: announcement
  publication-date: Sat, 02 May 2009 03:23:46 GMT
  news-link: http://catseye.tc/projects/pixley/
  description: |
    We present Pixley, a strict subset of
    R5RS Scheme.  Pixley supports four
    datatypes (boolean, cons cell, function, and symbol) and
    a dozen built-in symbols.  The Pixley reference interpreter
    is highly meta-circular, being written in 140 lines of Pixley
    (or, if you prefer, 140 lines of Scheme.)
    
    Pixley is also (depending on how you count them)
    my 50th programming language (that I'll admit to!)  This puts
    me squarely in the ballpark of [Wouter](http://strlen.com/proglang/)
    and [Aaron](http://esoteric.voxelperfect.net/wiki/User:Zzo38),
    and suggests that I plan to be *personally* responsible for a significant
    fraction of
    [the next 700 programming languages](http://ttic.uchicago.edu/~blume/classes/aut2008/proglang/papers/Landin-next-700.pdf).

"Scientific Proof that Cellular Automata are Intelligent!":
  type: Article
  article-type: announcement
  publication-date: Sun, 12 Apr 2009 01:23:46 GMT
  news-link: http://catseye.tc/projects/jaccia/
  description: |
    Did you know that
    [slime molds are intelligent because they can solve mazes](http://web.archive.org/web/20020220163303/http://www.riken.go.jp/lab-www/frontier-div/NEWSLETTER/feb2001/ameboid_e.htm)?
    Well it's true, because a scientist said it!
    And now, since Cat's Eye Technologies has designed a pair of cellular automata (called Jaccia and Jacciata) that can solve mazes,
    we know that cellular automata are intelligent too!  Three cheers for science!
    
"The Unlikely Programming Language Unveiled":
  type: Article
  article-type: announcement
  publication-date: Sun, 15 Mar 2009 21:20:50 GMT
  news-link: http://catseye.tc/projects/unlikely/
  description: |
    So we have our first new programming language
    of the year (or the overwhelming majority of it, anyway.)  It's called
    Unlikely and it conflates objects with continuations, exposes its
    program structures as classes with commensurate inheritance
    relationships, and to top it all off, makes dependency injection
    *mandatory*.  Overall a pretty painful experience, we think.
    
"Shelta Revisited":
  type: Article
  article-type: announcement
  publication-date: Sun, 08 Mar 2009 19:00:30 GMT
  news-link: http://catseye.tc/projects/shelta/
  description: |
    Almost a decade after it was first published,
    the assembly-language version of the Shelta compiler has been
    translated to NASM.  In the process it was improved so that
    it is *both* smaller than 512 bytes in size
    *and* able to participate in the bootstrap
    process.  Check it out (if you like that sort of thing.)
    
"A List of Unfinished Interesting Esolangs (LoUIE)":
  type: Article
  article-type: announcement
  publication-date: Wed, 13 Jan 2009 04:06:22 GMT
  news-link: http://catseye.tc/cpressey/louie.html
  description: |
    Wouldn't it be great if I had enough time to
    pursue every interesting idea for every yet-another-esolang I had?  Well,
    that's simply not possible.  They have leaked out into LoUIE, a
    List of Unfinished Interesting Esolangs, so that other esolang
    designers may possibly some day take up the torch.  (And,
    considering their recidivist tendencies, probably commit arson
    with it.  Just you watch.)
    
"Nine Projects Moved to Archive":
  type: Article
  article-type: announcement
  publication-date: Sun, 11 Jan 2009 23:06:29 GMT
  news-link: http://catseye.tc/archive/
  description: |
    We've moved nine of our less exciting projects to
    an archive area of the website, where they can bit-rot in peace.
    Their distfiles are still available for download, but their project pages
    will not be maintained.  A good number of these are forks and ports of
    open-source projects started by others (ErlGTK, ErlGuten, libvesa.)
    
"Let's Have a Warm Hand for Quylthulg":
  type: Article
  article-type: announcement
  publication-date: Sun, 07 Dec 2008 02:32:51 GMT
  news-link: http://catseye.tc/projects/quylthulg/
  description: |
    Let's have a warm hand for Quylthulg,
    the latest atrocity to escape from Cat's Eye Technologies'
    labs.  Quylthulg is a programming language with but a single
    control-flow construct: `foreach`.  In fact, it
    does also have a `goto`, but that can only appear
    inside data structures.
    
'Publishing of the "Kitsilano" Oscillator Circuit':
  type: Article
  article-type: announcement
  publication-date: Sat, 06 Sep 2008 06:58:13 GMT
  news-link: http://catseye.tc/projects/kitsilano/
  description: |
    After a summer hiatus, production
    resumes at Cat's Eye Technologies with the publishing of
    the schematic of and story behind
    'Kitsilano', an electronic oscillator circuit based on a pair
    of NPN transistors and a single capacitor.
    
"Release of the Context Rewriting Language Treacle":
  type: Article
  article-type: announcement
  publication-date: Sat, 12 Apr 2008 23:24:55 GMT
  news-link: http://catseye.tc/projects/treacle/
  description: |
    The Treacle programming language, successor
    to Arboretuum, has been released.  It is based on context
    rewriting, which generalizes forest-rewriting; names and variables
    are separate, and patterns may contain holes inside which
    subpatterns may match at any depth.
    
"Wee Present: The PETulant Cursor":
  type: Article
  article-type: announcement
  publication-date: Wed, 02 Apr 2008 07:59:59 GMT
  news-link: http://catseye.tc/projects/petulant/
  description: |
    Just in time for April Fools,
    Cat's Eye Technologies presents _The PETulant Cursor_,
    a tiny (just 44 bytes!) "display hack" for the Commodore 64.
    What's it do?  Run it and see!
    
"Arboretuum Forest-Rewriting Language Released":
  type: Article
  article-type: announcement
  publication-date: Wed, 05 Mar 2008 06:46:13 GMT
  news-link: http://catseye.tc/projects/arboretuum/
  description: |
    The Arboretuum programming language has
    been released.  It is based on forest-rewriting, which, as
    the name suggests, is an extension of tree-rewriting in
    which multiple trees are rewritten simultaneously.
    
"Website Updated to Use XHTML 1.0":
  type: Article
  article-type: announcement
  publication-date: Fri, 01 Feb 2008 03:26:31 GMT
  news-link: http://catseye.tc/about/website.html
  description: |
    We have updated our webpages to conform to
    the W3C Recommendation XHTML 1.0.  (This does not, however,
    apply to HTML documentation in projects.)  The CSS has also
    been cleaned up significantly, and the site generally looks
    better in Internet Explorer.
    
"Release of the Larabee Programming Language":
  type: Article
  article-type: announcement
  publication-date: Fri, 11 Jan 2008 03:20:00 GMT
  news-link: http://catseye.tc/projects/larabee/
  description: |
    The Larabee programming language has been released.
    Larabee borrows the notion of branch prediction from computer
    architecture, and abuses it to create a state of total despair.
    Also great fun at parties.
    
"Release of the Mascarpone Programming Language":
  type: Article
  article-type: announcement
  publication-date: Sun, 09 Dec 2007 02:01:55 GMT
  news-link: http://catseye.tc/projects/mascarpone/
  description: |
    The Mascarpone programming language has been released.
    Mascarpone is a rationalization and further exploration of some of the
    ideas behind Emmental.  Mascarpone is a self-modifying language, defined by
    a meta-circular interpreter, in which interpreters are also first-class values.
    
"Ypsilax Updated to Use Console::Virtual":
  type: Article
  article-type: announcement
  publication-date: Sun, 02 Dec 2007 17:40:07 GMT
  news-link: http://catseye.tc/projects/ypsilax/
  description: |
    Following the improvements made to the
    implementation of [[noit o' mnain worb]],
    our Ypsilax implementation also uses [[Console::Virtual]] and
    optional sub-second delays to provide a nice screen-oriented
    animation of Ypsilax' two-dimensional, non-deterministic,
    reflective grid rewriting, taking the burden of visualization
    off the user.
    
"RSS Feed Now Available for Cat's Eye Technologies":
  type: Article
  article-type: announcement
  publication-date: Sat, 01 Dec 2007 23:09:50 GMT
  news-link: http://catseye.tc/news.xml
  description: |
    News on the latest developments at Cat's Eye Technologies
    is now available as an RSS feed.  The [news page](/news.html)
    is still available, but it is now automatically generated from the RSS feed by
    an XSLT stylesheet.
    
    This may seem like a bit of a dodgy move, for a
    company with as staunch an attitude of post-modernist rectitude
    as Cat's Eye Technologies
    to go adopting technologies that are clearly of Pakled origin.
    
    However, there are several good reasons.  Firstly, XSLT, being
    a Turing-complete macro-expansion language with all the readability
    of Scheme, is practically an honourary esolang.  Secondly, RSS is
    specified about as rigorously and consistently as most esolangs as well.
    And thirdly — although I dispute that this is a particularly important
    reason — somebody might actually find it useful.
    
"Release of the Iphigeneia Programming Language":
  type: Article
  article-type: announcement
  publication-date: Sat, 25 Nov 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/iphi/
  description: |
    The Iphigeneia programming language is released.  Iphigeneia is a toy
    programming language which contains features from both
    imperative programming and functional programming.  It was originally
    intended as a testbed for algorithms that convert programs between the
    two forms, but it has strayed slightly from that goal.
    
"Console::Virtual Revived, HUNTER and worb Benefit":
  type: Article
  article-type: announcement
  publication-date: Sat, 23 Nov 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/cons_virt/
  description: |
    Noticing that the Perl 5 implementation of [[HUNTER]]
    required a module that was never restored to the website after the last crash,
    I dug it out of cold storage and refurbished it a bit, resulting in
    [[Console::Virtual]].
    
    In the process I tidied up the HUNTER project quite a bit, including supporting a
    real delay, measured in milliseconds, between animation frames.  (This requires the
    Time::HiRes module, but it still works without it; you just can't get
    sub-second resolution in that case.)
    
    And, in the process of doing that, I noticed the implementation of
    [[noit o' mnain worb]] could use many of the same improvements.
    So now it, too, uses Console::Virtual
    instead of requiring an ANSI-compatible terminal, and supports an adjustable delay
    between frames.
    
    Concurrent with this project interdependency, I've made a quick stab at listing
    the requirements for each project in the little "info box" on its project page.
    This is pretty crude right now, but it's hopefully a step in the right direction.
    
"Release of the Didigm Reflective Cellular Automaton":
  type: Article
  article-type: announcement
  publication-date: Sat, 17 Nov 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/didigm/
  description: |
    Release of initial specification of the Didigm
    reflective ceullar automaton.
    
    Also some random hacking on libvesa.
    
"Release of the Emmental Programing Language":
  type: Article
  article-type: announcement
  publication-date: Sat, 11 Nov 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/emmental/
  description: |
    The Emmental programming language has been
    released.  Emmental is a self-modifying programming language; it is defined in
    terms of a meta-circular interpreter, and this meta-circular interpreter provides
    operations that modify its behaviour.  In fact, Emmental requires that this
    mechanism of meta-circular self-modification in order for it to achieve
    Turing-completeness.
    
"Release of You are Reading the Name of this Esolang":
  type: Article
  article-type: announcement
  publication-date: Sat, 05 Nov 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/urreading/
  description: |
    The programming language You are Reading the Name of this Esolang
    was released.  It's an exploration in the design space of programming languages
    with undecidable elements.  Specifically, the problem of whether or not a given string
    of symbols is a well-formed You are Reading the Name of this Esolang program is undecidable.
    
"Release of the Cabra Programming Language":
  type: Article
  article-type: announcement
  publication-date: Sat, 01 Nov 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/cabra/
  description: |
    The Cabra programming language,
    successor of sorts to [[Burro]], has been released.
    Cabra programs form, not a group, but a dioid — an idempotent semiring — 
    under the operations of sequential and parallel composition.
    
"Release of the Burro Programming Language":
  type: Article
  article-type: announcement
  publication-date: Sat, 26 Oct 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/burro/
  description: |
    The Burro programming language, after two years
    (on and off) of design work, has finally been released.  Burro is a Brainfuck-like language
    whose programs form an algebraical group under the operation of concatenation (roughly
    speaking — see the docs for the complete picture.)
    
"(Re-)Unearthing of the Maentwrog Programming Language":
  type: Article
  article-type: announcement
  publication-date: Sat, 30 Sep 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/maentw/
  description: |
    The Maentwrong language, predecessor of
    [[Befunge-93]], and thought by me to be lost forever (again), was found (again)
    on a long-forgotten backup disc.  It has been brought forth into the light
    of the projects directory (again) for whatever it's worth.
    
"catseye.mine.nu No Longer in Service":
  type: Article
  article-type: announcement
  publication-date: Sat, 28 Aug 2007 12:00:00 GMT
  news-link: http://catseye.tc/
  description: |
    The catseye.mine.nu server is no longer in service
    This has two consequences:  The old http://catseye.mine.nu:8080/
    URL prefix for this site will no longer redirect here to catseye.tc,
    and the Subversion repositories served by catseye.mine.nu
    will no longer be publicly available.
    
    The catseye.webhop.net redirect will continue to work, and the
    tarball releases of projects will still be available from catseye.tc.
    
    Whether the catseye.mine.nu server will ever go up again or not depends
    on too many factors for me to be able to say at this time.  I definately want to
    keep providing publicly available source code repositories of the projects, but due
    to circumstances it will have to be a low priority goal over the next few months.
    
"Updates to SMITH and REDGREEN":
  type: Article
  article-type: announcement
  publication-date: Sat, 22 Jul 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/smith/
  description: |
    The SMITH language has been updated in
    a tiny but significant way: overwriting instructions with other instructions
    is now defined.  The reference implementation now implements this sanely as
    well.  Thanks to Nathan Thern for pointing this out (and for submitting a
    SMITH version of "99 Bottles of Beer"!)
    
    Some bugs in [[REDGREEN]] have been fixed
    as well: the documentation claims that Wires and Sparks behave per the
    WireWorld automaton, and that Zappy and BigZappy set things on fire.  The
    ALPACA implementation of REDGREEN now properly implements these rules.
    Thanks to Stewart Gordon for pointing these bugs out.
    
    Also, I dug up [[noise]] and put
    it in the projects.  I swear there was a manual page for it too, but I can't find it.
    
"Release of the Hev Programming Language":
  type: Article
  article-type: announcement
  publication-date: Sat, 17 Jun 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/hev/
  description: |
    The Hev programming language has been released.
    Hev allows programming in infix notation, but at the same time,
    never needs parentheses and never forces you to memorize precedence tables!
    Truly, a major breakthrough.
    
"Release of the Xigxag automaton":
  type: Article
  article-type: announcement
  publication-date: Sat, 02 Jun 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/xigxag/
  description: |
    Xigxag, a simple automaton with exponential growth almost
    everywhere, has been released.
    
"Zzrk Released, and More":
  type: Article
  article-type: announcement
  publication-date: Sat, 15 May 2007 12:00:00 GMT
  news-link: http://catseye.tc/projects/zzrk/
  description: |
    Most significantly, a project has been added for
    Zzrk, a text adventure
    game written in a meta-language intended for building compilers (Zz).
    
    I also brought [[GraNoLa/M]] and [[SP\ASM]]
    out of those dusty ol' boxes in the attic and added them to the line-up.
    
    [[REDGREEN]], [[Braktif]], and [[Circute]]
    have also been split off from the main [[ALPACA]]
    distribution, and live in projects of their own.
    
    I also polished the site design a wee bit.
