# encoding: UTF-8
type:
  type: type

Disambiguation node:
  type: type

# presentedy things:
Online Installation:
  type: type
  description: |
    This is a list of all works installed online on [[catseye.tc]].
    
    This list is of _all_ works!  You may have better luck navigating
    the online installations by going to the [front page](/) and
    browsing by one of the categories: **[[Programming Language]],**
    **[[Gewgaw]], [[Game]], Musical Composition, Picture, [[Text]],**
    **[[Tool]], Electronics Project,** or **[[Retrocomputing]]**.

Computational Class:
  type: type
Genre:
  type: type
Individual:
  type: type
Organization:
  type: type
Competition:
  type: type
Website:
  type: type
Collection:
  type: type

# implementations:
Implementation:
  type: type
  description: |
    This is a list of implementations with entries in [[Chrysoberyl]].
    
    These are implementations of *all* kinds of things:
    programming languages,
    [[Platform|platforms]],
    [[Library|libraries]],
    [[Tool|tools]],
    [[Game|games]],
    [[Text|texts]], and so forth.
    For a more fine-grained breakdown, see those individual categories.
Implementation Type:
  type: type
Development Stage:
  type: type
License:
  type: type

# distributions:
Distribution:
  type: type
  suppress-page-generation: true


Gewgaw:
  type: type
  description: |
    In [[Chrysoberyl]] parlance, a _gewgaw_ is the digital version of a
    bagatelle (music) or a doodle (visual art).  It almost always involves
    visuals (usually animated), sometimes audio, and occasionally interaction.
    
    A gewgaw need not be implemented in [[HTML5]], but many of
    [[Cat's Eye Technologies]]' gewgaws are, and you can can experience
    them here, online, right in your web browser.
    
    Note that the distinctions between a Gewgaw and an [[Automaton]] or
    even a [[Game]] are not always clear, and entries here may be categorized
    somewhat arbitrarily.
    
    A special kind of gewgaw, for which there is a whole historical "scene",
    is the "demo".  We avoid that terminology here, partly because it has
    other useful meanings, and partly because demos have a certain thrust
    which gewgaws need not have (pushing the limits of a computer, being
    very visually/aurally impressive, sending "greetings" to other demosceners,
    etc.)


# these are implementables too, but that property is less exploited for them
Database:
  type: type
